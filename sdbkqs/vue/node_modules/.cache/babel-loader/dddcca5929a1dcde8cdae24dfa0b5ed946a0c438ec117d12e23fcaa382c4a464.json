{"ast":null,"code":"/*\r\nLanguage: VHDL\r\nAuthor: Igor Kalnitsky <igor@kalnitsky.org>\r\nContributors: Daniel C.K. Kho <daniel.kho@tauhop.com>, Guillaume Savaton <guillaume.savaton@eseo.fr>\r\nDescription: VHDL is a hardware description language used in electronic design automation to describe digital and mixed-signal systems.\r\nWebsite: https://en.wikipedia.org/wiki/VHDL\r\nCategory: hardware\r\n*/\n\nfunction vhdl(hljs) {\n  // Regular expression for VHDL numeric literals.\n\n  // Decimal literal:\n  const INTEGER_RE = '\\\\d(_|\\\\d)*';\n  const EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  const DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n  // Based literal:\n  const BASED_INTEGER_RE = '\\\\w+';\n  const BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n  const NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n  const KEYWORDS = [\"abs\", \"access\", \"after\", \"alias\", \"all\", \"and\", \"architecture\", \"array\", \"assert\", \"assume\", \"assume_guarantee\", \"attribute\", \"begin\", \"block\", \"body\", \"buffer\", \"bus\", \"case\", \"component\", \"configuration\", \"constant\", \"context\", \"cover\", \"disconnect\", \"downto\", \"default\", \"else\", \"elsif\", \"end\", \"entity\", \"exit\", \"fairness\", \"file\", \"for\", \"force\", \"function\", \"generate\", \"generic\", \"group\", \"guarded\", \"if\", \"impure\", \"in\", \"inertial\", \"inout\", \"is\", \"label\", \"library\", \"linkage\", \"literal\", \"loop\", \"map\", \"mod\", \"nand\", \"new\", \"next\", \"nor\", \"not\", \"null\", \"of\", \"on\", \"open\", \"or\", \"others\", \"out\", \"package\", \"parameter\", \"port\", \"postponed\", \"procedure\", \"process\", \"property\", \"protected\", \"pure\", \"range\", \"record\", \"register\", \"reject\", \"release\", \"rem\", \"report\", \"restrict\", \"restrict_guarantee\", \"return\", \"rol\", \"ror\", \"select\", \"sequence\", \"severity\", \"shared\", \"signal\", \"sla\", \"sll\", \"sra\", \"srl\", \"strong\", \"subtype\", \"then\", \"to\", \"transport\", \"type\", \"unaffected\", \"units\", \"until\", \"use\", \"variable\", \"view\", \"vmode\", \"vprop\", \"vunit\", \"wait\", \"when\", \"while\", \"with\", \"xnor\", \"xor\"];\n  const BUILT_INS = [\"boolean\", \"bit\", \"character\", \"integer\", \"time\", \"delay_length\", \"natural\", \"positive\", \"string\", \"bit_vector\", \"file_open_kind\", \"file_open_status\", \"std_logic\", \"std_logic_vector\", \"unsigned\", \"signed\", \"boolean_vector\", \"integer_vector\", \"std_ulogic\", \"std_ulogic_vector\", \"unresolved_unsigned\", \"u_unsigned\", \"unresolved_signed\", \"u_signed\", \"real_vector\", \"time_vector\"];\n  const LITERALS = [\n  // severity_level\n  \"false\", \"true\", \"note\", \"warning\", \"error\", \"failure\",\n  // textio\n  \"line\", \"text\", \"side\", \"width\"];\n  return {\n    name: 'VHDL',\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS,\n      built_in: BUILT_INS,\n      literal: LITERALS\n    },\n    illegal: /\\{/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE,\n    // VHDL-2008 block commenting.\n    hljs.COMMENT('--', '$'), hljs.QUOTE_STRING_MODE, {\n      className: 'number',\n      begin: NUMBER_RE,\n      relevance: 0\n    }, {\n      className: 'string',\n      begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      className: 'symbol',\n      begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n}\nmodule.exports = vhdl;","map":{"version":3,"names":["vhdl","hljs","INTEGER_RE","EXPONENT_RE","DECIMAL_LITERAL_RE","BASED_INTEGER_RE","BASED_LITERAL_RE","NUMBER_RE","KEYWORDS","BUILT_INS","LITERALS","name","case_insensitive","keywords","keyword","built_in","literal","illegal","contains","C_BLOCK_COMMENT_MODE","COMMENT","QUOTE_STRING_MODE","className","begin","relevance","BACKSLASH_ESCAPE","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/vhdl.js"],"sourcesContent":["/*\r\nLanguage: VHDL\r\nAuthor: Igor Kalnitsky <igor@kalnitsky.org>\r\nContributors: Daniel C.K. Kho <daniel.kho@tauhop.com>, Guillaume Savaton <guillaume.savaton@eseo.fr>\r\nDescription: VHDL is a hardware description language used in electronic design automation to describe digital and mixed-signal systems.\r\nWebsite: https://en.wikipedia.org/wiki/VHDL\r\nCategory: hardware\r\n*/\r\n\r\nfunction vhdl(hljs) {\r\n  // Regular expression for VHDL numeric literals.\r\n\r\n  // Decimal literal:\r\n  const INTEGER_RE = '\\\\d(_|\\\\d)*';\r\n  const EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\r\n  const DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\r\n  // Based literal:\r\n  const BASED_INTEGER_RE = '\\\\w+';\r\n  const BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\r\n\r\n  const NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\r\n\r\n  const KEYWORDS = [\r\n    \"abs\",\r\n    \"access\",\r\n    \"after\",\r\n    \"alias\",\r\n    \"all\",\r\n    \"and\",\r\n    \"architecture\",\r\n    \"array\",\r\n    \"assert\",\r\n    \"assume\",\r\n    \"assume_guarantee\",\r\n    \"attribute\",\r\n    \"begin\",\r\n    \"block\",\r\n    \"body\",\r\n    \"buffer\",\r\n    \"bus\",\r\n    \"case\",\r\n    \"component\",\r\n    \"configuration\",\r\n    \"constant\",\r\n    \"context\",\r\n    \"cover\",\r\n    \"disconnect\",\r\n    \"downto\",\r\n    \"default\",\r\n    \"else\",\r\n    \"elsif\",\r\n    \"end\",\r\n    \"entity\",\r\n    \"exit\",\r\n    \"fairness\",\r\n    \"file\",\r\n    \"for\",\r\n    \"force\",\r\n    \"function\",\r\n    \"generate\",\r\n    \"generic\",\r\n    \"group\",\r\n    \"guarded\",\r\n    \"if\",\r\n    \"impure\",\r\n    \"in\",\r\n    \"inertial\",\r\n    \"inout\",\r\n    \"is\",\r\n    \"label\",\r\n    \"library\",\r\n    \"linkage\",\r\n    \"literal\",\r\n    \"loop\",\r\n    \"map\",\r\n    \"mod\",\r\n    \"nand\",\r\n    \"new\",\r\n    \"next\",\r\n    \"nor\",\r\n    \"not\",\r\n    \"null\",\r\n    \"of\",\r\n    \"on\",\r\n    \"open\",\r\n    \"or\",\r\n    \"others\",\r\n    \"out\",\r\n    \"package\",\r\n    \"parameter\",\r\n    \"port\",\r\n    \"postponed\",\r\n    \"procedure\",\r\n    \"process\",\r\n    \"property\",\r\n    \"protected\",\r\n    \"pure\",\r\n    \"range\",\r\n    \"record\",\r\n    \"register\",\r\n    \"reject\",\r\n    \"release\",\r\n    \"rem\",\r\n    \"report\",\r\n    \"restrict\",\r\n    \"restrict_guarantee\",\r\n    \"return\",\r\n    \"rol\",\r\n    \"ror\",\r\n    \"select\",\r\n    \"sequence\",\r\n    \"severity\",\r\n    \"shared\",\r\n    \"signal\",\r\n    \"sla\",\r\n    \"sll\",\r\n    \"sra\",\r\n    \"srl\",\r\n    \"strong\",\r\n    \"subtype\",\r\n    \"then\",\r\n    \"to\",\r\n    \"transport\",\r\n    \"type\",\r\n    \"unaffected\",\r\n    \"units\",\r\n    \"until\",\r\n    \"use\",\r\n    \"variable\",\r\n    \"view\",\r\n    \"vmode\",\r\n    \"vprop\",\r\n    \"vunit\",\r\n    \"wait\",\r\n    \"when\",\r\n    \"while\",\r\n    \"with\",\r\n    \"xnor\",\r\n    \"xor\"\r\n  ];\r\n  const BUILT_INS = [\r\n    \"boolean\",\r\n    \"bit\",\r\n    \"character\",\r\n    \"integer\",\r\n    \"time\",\r\n    \"delay_length\",\r\n    \"natural\",\r\n    \"positive\",\r\n    \"string\",\r\n    \"bit_vector\",\r\n    \"file_open_kind\",\r\n    \"file_open_status\",\r\n    \"std_logic\",\r\n    \"std_logic_vector\",\r\n    \"unsigned\",\r\n    \"signed\",\r\n    \"boolean_vector\",\r\n    \"integer_vector\",\r\n    \"std_ulogic\",\r\n    \"std_ulogic_vector\",\r\n    \"unresolved_unsigned\",\r\n    \"u_unsigned\",\r\n    \"unresolved_signed\",\r\n    \"u_signed\",\r\n    \"real_vector\",\r\n    \"time_vector\"\r\n  ];\r\n  const LITERALS = [\r\n    // severity_level\r\n    \"false\",\r\n    \"true\",\r\n    \"note\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"failure\",\r\n    // textio\r\n    \"line\",\r\n    \"text\",\r\n    \"side\",\r\n    \"width\"\r\n  ];\r\n\r\n  return {\r\n    name: 'VHDL',\r\n    case_insensitive: true,\r\n    keywords: {\r\n      keyword: KEYWORDS,\r\n      built_in: BUILT_INS,\r\n      literal: LITERALS\r\n    },\r\n    illegal: /\\{/,\r\n    contains: [\r\n      hljs.C_BLOCK_COMMENT_MODE, // VHDL-2008 block commenting.\r\n      hljs.COMMENT('--', '$'),\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        className: 'number',\r\n        begin: NUMBER_RE,\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'string',\r\n        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      {\r\n        className: 'symbol',\r\n        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = vhdl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}