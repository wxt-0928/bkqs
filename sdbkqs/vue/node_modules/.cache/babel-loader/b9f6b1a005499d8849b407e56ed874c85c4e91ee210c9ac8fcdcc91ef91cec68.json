{"ast":null,"code":"/*\r\nLanguage: C++\r\nCategory: common, system\r\nWebsite: https://isocpp.org\r\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [{\n      begin: /\\\\\\n/\n    }]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)(' + DECLTYPE_AUTO_RE + '|' + regex.optional(NAMESPACE_RE) + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE) + ')';\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [{\n      begin: '(u8?|U|L)?\"',\n      end: '\"',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n      end: '\\'',\n      illegal: '.'\n    }, hljs.END_SAME_AS_BEGIN({\n      begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n      end: /\\)([^()\\\\ ]{0,16})\"/\n    })]\n  };\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n    // Floating-point literal.\n    {\n      begin: \"[+-]?(?:\" // Leading sign.\n      // Decimal.\n      + \"(?:\" + \"[0-9](?:'?[0-9])*\\\\.(?:[0-9](?:'?[0-9])*)?\" + \"|\\\\.[0-9](?:'?[0-9])*\" + \")(?:[Ee][+-]?[0-9](?:'?[0-9])*)?\" + \"|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*\"\n      // Hexadecimal.\n      + \"|0[Xx](?:\" + \"[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?\" + \"|\\\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*\" + \")[Pp][+-]?[0-9](?:'?[0-9])*\" + \")(?:\" // Literal suffixes.\n      + \"[Ff](?:16|32|64|128)?\" + \"|(BF|bf)16\" + \"|[Ll]\" + \"|\" // Literal suffix is optional.\n      + \")\"\n    },\n    // Integer literal.\n    {\n      begin: \"[+-]?\\\\b(?:\" // Leading sign.\n      + \"0[Bb][01](?:'?[01])*\" // Binary.\n      + \"|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*\" // Hexadecimal.\n      + \"|0(?:'?[0-7])*\" // Octal or just a lone zero.\n      + \"|[1-9](?:'?[0-9])*\" // Decimal.\n      + \")(?:\" // Literal suffixes.\n      + \"[Uu](?:LL?|ll?)\" + \"|[Uu][Zz]?\" + \"|(?:LL?|ll?)[Uu]?\" + \"|[Zz][Uu]\" + \"|\" // Literal suffix is optional.\n      + \")\"\n      // Note: there are user-defined literal suffixes too, but perhaps having the custom suffix not part of the\n      // literal highlight actually makes it stand out more.\n    }],\n\n    relevance: 0\n  };\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      keyword: 'if else elif endif define undef warning error line ' + 'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [{\n      begin: /\\\\\\n/,\n      relevance: 0\n    }, hljs.inherit(STRINGS, {\n      className: 'string'\n    }), {\n      className: 'string',\n      begin: /<.*?>/\n    }, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n  };\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = ['alignas', 'alignof', 'and', 'and_eq', 'asm', 'atomic_cancel', 'atomic_commit', 'atomic_noexcept', 'auto', 'bitand', 'bitor', 'break', 'case', 'catch', 'class', 'co_await', 'co_return', 'co_yield', 'compl', 'concept', 'const_cast|10', 'consteval', 'constexpr', 'constinit', 'continue', 'decltype', 'default', 'delete', 'do', 'dynamic_cast|10', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'final', 'for', 'friend', 'goto', 'if', 'import', 'inline', 'module', 'mutable', 'namespace', 'new', 'noexcept', 'not', 'not_eq', 'nullptr', 'operator', 'or', 'or_eq', 'override', 'private', 'protected', 'public', 'reflexpr', 'register', 'reinterpret_cast|10', 'requires', 'return', 'sizeof', 'static_assert', 'static_cast|10', 'struct', 'switch', 'synchronized', 'template', 'this', 'thread_local', 'throw', 'transaction_safe', 'transaction_safe_dynamic', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'using', 'virtual', 'volatile', 'while', 'xor', 'xor_eq'];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = ['bool', 'char', 'char16_t', 'char32_t', 'char8_t', 'double', 'float', 'int', 'long', 'short', 'void', 'wchar_t', 'unsigned', 'signed', 'const', 'static'];\n  const TYPE_HINTS = ['any', 'auto_ptr', 'barrier', 'binary_semaphore', 'bitset', 'complex', 'condition_variable', 'condition_variable_any', 'counting_semaphore', 'deque', 'false_type', 'future', 'imaginary', 'initializer_list', 'istringstream', 'jthread', 'latch', 'lock_guard', 'multimap', 'multiset', 'mutex', 'optional', 'ostringstream', 'packaged_task', 'pair', 'promise', 'priority_queue', 'queue', 'recursive_mutex', 'recursive_timed_mutex', 'scoped_lock', 'set', 'shared_future', 'shared_lock', 'shared_mutex', 'shared_timed_mutex', 'shared_ptr', 'stack', 'string_view', 'stringstream', 'timed_mutex', 'thread', 'true_type', 'tuple', 'unique_lock', 'unique_ptr', 'unordered_map', 'unordered_multimap', 'unordered_multiset', 'unordered_set', 'variant', 'vector', 'weak_ptr', 'wstring', 'wstring_view'];\n  const FUNCTION_HINTS = ['abort', 'abs', 'acos', 'apply', 'as_const', 'asin', 'atan', 'atan2', 'calloc', 'ceil', 'cerr', 'cin', 'clog', 'cos', 'cosh', 'cout', 'declval', 'endl', 'exchange', 'exit', 'exp', 'fabs', 'floor', 'fmod', 'forward', 'fprintf', 'fputs', 'free', 'frexp', 'fscanf', 'future', 'invoke', 'isalnum', 'isalpha', 'iscntrl', 'isdigit', 'isgraph', 'islower', 'isprint', 'ispunct', 'isspace', 'isupper', 'isxdigit', 'labs', 'launder', 'ldexp', 'log', 'log10', 'make_pair', 'make_shared', 'make_shared_for_overwrite', 'make_tuple', 'make_unique', 'malloc', 'memchr', 'memcmp', 'memcpy', 'memset', 'modf', 'move', 'pow', 'printf', 'putchar', 'puts', 'realloc', 'scanf', 'sin', 'sinh', 'snprintf', 'sprintf', 'sqrt', 'sscanf', 'std', 'stderr', 'stdin', 'stdout', 'strcat', 'strchr', 'strcmp', 'strcpy', 'strcspn', 'strlen', 'strncat', 'strncmp', 'strncpy', 'strpbrk', 'strrchr', 'strspn', 'strstr', 'swap', 'tan', 'tanh', 'terminate', 'to_underlying', 'tolower', 'toupper', 'vfprintf', 'visit', 'vprintf', 'vsprintf'];\n  const LITERALS = ['NULL', 'false', 'nullopt', 'nullptr', 'true'];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = ['_Pragma'];\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS\n    },\n    begin: regex.concat(/\\b/, /(?!decltype)/, /(?!if)/, /(?!for)/, /(?!switch)/, /(?!while)/, hljs.IDENT_RE, regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n  const EXPRESSION_CONTAINS = [FUNCTION_DISPATCH, PREPROCESSOR, CPP_PRIMITIVE_TYPES, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBERS, STRINGS];\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [{\n      begin: /=/,\n      end: /;/\n    }, {\n      begin: /\\(/,\n      end: /\\)/\n    }, {\n      beginKeywords: 'new throw return else',\n      end: /;/\n    }],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: CPP_KEYWORDS,\n      contains: EXPRESSION_CONTAINS.concat(['self']),\n      relevance: 0\n    }]),\n    relevance: 0\n  };\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [{\n      // to prevent it from being confused as the function title\n      begin: DECLTYPE_AUTO_RE,\n      keywords: CPP_KEYWORDS,\n      relevance: 0\n    }, {\n      begin: FUNCTION_TITLE,\n      returnBegin: true,\n      contains: [TITLE_MODE],\n      relevance: 0\n    },\n    // needed because we do not have look-behind on the below rule\n    // to prevent it from grabbing the final : in a :: pair\n    {\n      begin: /::/,\n      relevance: 0\n    },\n    // initializers\n    {\n      begin: /:/,\n      endsWithParent: true,\n      contains: [STRINGS, NUMBERS]\n    },\n    // allow for multiple declarations, e.g.:\n    // extern void f(int), g(char);\n    {\n      relevance: 0,\n      match: /,/\n    }, {\n      className: 'params',\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: CPP_KEYWORDS,\n      relevance: 0,\n      contains: [C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRINGS, NUMBERS, CPP_PRIMITIVE_TYPES,\n      // Count matching parentheses.\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: ['self', C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRINGS, NUMBERS, CPP_PRIMITIVE_TYPES]\n      }]\n    }, CPP_PRIMITIVE_TYPES, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, PREPROCESSOR]\n  };\n  return {\n    name: 'C++',\n    aliases: ['cc', 'c++', 'h++', 'hpp', 'hh', 'hxx', 'cxx'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: {\n      'function.dispatch': 'built_in'\n    },\n    contains: [].concat(EXPRESSION_CONTEXT, FUNCTION_DECLARATION, FUNCTION_DISPATCH, EXPRESSION_CONTAINS, [PREPROCESSOR, {\n      // containers: ie, `vector <int> rooms (9);`\n      begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n      end: '>',\n      keywords: CPP_KEYWORDS,\n      contains: ['self', CPP_PRIMITIVE_TYPES]\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: CPP_KEYWORDS\n    }, {\n      match: [\n      // extra complexity to deal with `enum class` and `enum struct`\n      /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/, /\\s+/, /\\w+/],\n      className: {\n        1: 'keyword',\n        3: 'title.class'\n      }\n    }])\n  };\n}\n\n/*\r\nLanguage: Arduino\r\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\r\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\r\nWebsite: https://www.arduino.cc\r\nCategory: system\r\n*/\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    type: [\"boolean\", \"byte\", \"word\", \"String\"],\n    built_in: [\"KeyboardController\", \"MouseController\", \"SoftwareSerial\", \"EthernetServer\", \"EthernetClient\", \"LiquidCrystal\", \"RobotControl\", \"GSMVoiceCall\", \"EthernetUDP\", \"EsploraTFT\", \"HttpClient\", \"RobotMotor\", \"WiFiClient\", \"GSMScanner\", \"FileSystem\", \"Scheduler\", \"GSMServer\", \"YunClient\", \"YunServer\", \"IPAddress\", \"GSMClient\", \"GSMModem\", \"Keyboard\", \"Ethernet\", \"Console\", \"GSMBand\", \"Esplora\", \"Stepper\", \"Process\", \"WiFiUDP\", \"GSM_SMS\", \"Mailbox\", \"USBHost\", \"Firmata\", \"PImage\", \"Client\", \"Server\", \"GSMPIN\", \"FileIO\", \"Bridge\", \"Serial\", \"EEPROM\", \"Stream\", \"Mouse\", \"Audio\", \"Servo\", \"File\", \"Task\", \"GPRS\", \"WiFi\", \"Wire\", \"TFT\", \"GSM\", \"SPI\", \"SD\"],\n    _hints: [\"setup\", \"loop\", \"runShellCommandAsynchronously\", \"analogWriteResolution\", \"retrieveCallingNumber\", \"printFirmwareVersion\", \"analogReadResolution\", \"sendDigitalPortPair\", \"noListenOnLocalhost\", \"readJoystickButton\", \"setFirmwareVersion\", \"readJoystickSwitch\", \"scrollDisplayRight\", \"getVoiceCallStatus\", \"scrollDisplayLeft\", \"writeMicroseconds\", \"delayMicroseconds\", \"beginTransmission\", \"getSignalStrength\", \"runAsynchronously\", \"getAsynchronously\", \"listenOnLocalhost\", \"getCurrentCarrier\", \"readAccelerometer\", \"messageAvailable\", \"sendDigitalPorts\", \"lineFollowConfig\", \"countryNameWrite\", \"runShellCommand\", \"readStringUntil\", \"rewindDirectory\", \"readTemperature\", \"setClockDivider\", \"readLightSensor\", \"endTransmission\", \"analogReference\", \"detachInterrupt\", \"countryNameRead\", \"attachInterrupt\", \"encryptionType\", \"readBytesUntil\", \"robotNameWrite\", \"readMicrophone\", \"robotNameRead\", \"cityNameWrite\", \"userNameWrite\", \"readJoystickY\", \"readJoystickX\", \"mouseReleased\", \"openNextFile\", \"scanNetworks\", \"noInterrupts\", \"digitalWrite\", \"beginSpeaker\", \"mousePressed\", \"isActionDone\", \"mouseDragged\", \"displayLogos\", \"noAutoscroll\", \"addParameter\", \"remoteNumber\", \"getModifiers\", \"keyboardRead\", \"userNameRead\", \"waitContinue\", \"processInput\", \"parseCommand\", \"printVersion\", \"readNetworks\", \"writeMessage\", \"blinkVersion\", \"cityNameRead\", \"readMessage\", \"setDataMode\", \"parsePacket\", \"isListening\", \"setBitOrder\", \"beginPacket\", \"isDirectory\", \"motorsWrite\", \"drawCompass\", \"digitalRead\", \"clearScreen\", \"serialEvent\", \"rightToLeft\", \"setTextSize\", \"leftToRight\", \"requestFrom\", \"keyReleased\", \"compassRead\", \"analogWrite\", \"interrupts\", \"WiFiServer\", \"disconnect\", \"playMelody\", \"parseFloat\", \"autoscroll\", \"getPINUsed\", \"setPINUsed\", \"setTimeout\", \"sendAnalog\", \"readSlider\", \"analogRead\", \"beginWrite\", \"createChar\", \"motorsStop\", \"keyPressed\", \"tempoWrite\", \"readButton\", \"subnetMask\", \"debugPrint\", \"macAddress\", \"writeGreen\", \"randomSeed\", \"attachGPRS\", \"readString\", \"sendString\", \"remotePort\", \"releaseAll\", \"mouseMoved\", \"background\", \"getXChange\", \"getYChange\", \"answerCall\", \"getResult\", \"voiceCall\", \"endPacket\", \"constrain\", \"getSocket\", \"writeJSON\", \"getButton\", \"available\", \"connected\", \"findUntil\", \"readBytes\", \"exitValue\", \"readGreen\", \"writeBlue\", \"startLoop\", \"IPAddress\", \"isPressed\", \"sendSysex\", \"pauseMode\", \"gatewayIP\", \"setCursor\", \"getOemKey\", \"tuneWrite\", \"noDisplay\", \"loadImage\", \"switchPIN\", \"onRequest\", \"onReceive\", \"changePIN\", \"playFile\", \"noBuffer\", \"parseInt\", \"overflow\", \"checkPIN\", \"knobRead\", \"beginTFT\", \"bitClear\", \"updateIR\", \"bitWrite\", \"position\", \"writeRGB\", \"highByte\", \"writeRed\", \"setSpeed\", \"readBlue\", \"noStroke\", \"remoteIP\", \"transfer\", \"shutdown\", \"hangCall\", \"beginSMS\", \"endWrite\", \"attached\", \"maintain\", \"noCursor\", \"checkReg\", \"checkPUK\", \"shiftOut\", \"isValid\", \"shiftIn\", \"pulseIn\", \"connect\", \"println\", \"localIP\", \"pinMode\", \"getIMEI\", \"display\", \"noBlink\", \"process\", \"getBand\", \"running\", \"beginSD\", \"drawBMP\", \"lowByte\", \"setBand\", \"release\", \"bitRead\", \"prepare\", \"pointTo\", \"readRed\", \"setMode\", \"noFill\", \"remove\", \"listen\", \"stroke\", \"detach\", \"attach\", \"noTone\", \"exists\", \"buffer\", \"height\", \"bitSet\", \"circle\", \"config\", \"cursor\", \"random\", \"IRread\", \"setDNS\", \"endSMS\", \"getKey\", \"micros\", \"millis\", \"begin\", \"print\", \"write\", \"ready\", \"flush\", \"width\", \"isPIN\", \"blink\", \"clear\", \"press\", \"mkdir\", \"rmdir\", \"close\", \"point\", \"yield\", \"image\", \"BSSID\", \"click\", \"delay\", \"read\", \"text\", \"move\", \"peek\", \"beep\", \"rect\", \"line\", \"open\", \"seek\", \"fill\", \"size\", \"turn\", \"stop\", \"home\", \"find\", \"step\", \"tone\", \"sqrt\", \"RSSI\", \"SSID\", \"end\", \"bit\", \"tan\", \"cos\", \"sin\", \"pow\", \"map\", \"abs\", \"max\", \"min\", \"get\", \"run\", \"put\"],\n    literal: [\"DIGITAL_MESSAGE\", \"FIRMATA_STRING\", \"ANALOG_MESSAGE\", \"REPORT_DIGITAL\", \"REPORT_ANALOG\", \"INPUT_PULLUP\", \"SET_PIN_MODE\", \"INTERNAL2V56\", \"SYSTEM_RESET\", \"LED_BUILTIN\", \"INTERNAL1V1\", \"SYSEX_START\", \"INTERNAL\", \"EXTERNAL\", \"DEFAULT\", \"OUTPUT\", \"INPUT\", \"HIGH\", \"LOW\"]\n  };\n  const ARDUINO = cPlusPlus(hljs);\n  const kws = /** @type {Record<string,any>} */ARDUINO.keywords;\n  kws.type = [...kws.type, ...ARDUINO_KW.type];\n  kws.literal = [...kws.literal, ...ARDUINO_KW.literal];\n  kws.built_in = [...kws.built_in, ...ARDUINO_KW.built_in];\n  kws._hints = ARDUINO_KW._hints;\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = ['ino'];\n  ARDUINO.supersetOf = \"cpp\";\n  return ARDUINO;\n}\nmodule.exports = arduino;","map":{"version":3,"names":["cPlusPlus","hljs","regex","C_LINE_COMMENT_MODE","COMMENT","contains","begin","DECLTYPE_AUTO_RE","NAMESPACE_RE","TEMPLATE_ARGUMENT_RE","FUNCTION_TYPE_RE","optional","CPP_PRIMITIVE_TYPES","className","CHARACTER_ESCAPES","STRINGS","variants","end","illegal","BACKSLASH_ESCAPE","END_SAME_AS_BEGIN","NUMBERS","relevance","PREPROCESSOR","keywords","keyword","inherit","C_BLOCK_COMMENT_MODE","TITLE_MODE","IDENT_RE","FUNCTION_TITLE","RESERVED_KEYWORDS","RESERVED_TYPES","TYPE_HINTS","FUNCTION_HINTS","LITERALS","BUILT_IN","CPP_KEYWORDS","type","literal","built_in","_type_hints","FUNCTION_DISPATCH","_hint","concat","lookahead","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","beginKeywords","FUNCTION_DECLARATION","returnBegin","excludeEnd","endsWithParent","match","name","aliases","classNameAliases","arduino","ARDUINO_KW","_hints","ARDUINO","kws","supersetOf","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/arduino.js"],"sourcesContent":["/*\r\nLanguage: C++\r\nCategory: common, system\r\nWebsite: https://isocpp.org\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction cPlusPlus(hljs) {\r\n  const regex = hljs.regex;\r\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\r\n  // not include such support nor can we be sure all the grammars depending\r\n  // on it would desire this behavior\r\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\r\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\r\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\r\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\r\n  const FUNCTION_TYPE_RE = '(?!struct)('\r\n    + DECLTYPE_AUTO_RE + '|'\r\n    + regex.optional(NAMESPACE_RE)\r\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\r\n  + ')';\r\n\r\n  const CPP_PRIMITIVE_TYPES = {\r\n    className: 'type',\r\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\r\n  };\r\n\r\n  // https://en.cppreference.com/w/cpp/language/escape\r\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\r\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\r\n  const STRINGS = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: '(u8?|U|L)?\"',\r\n        end: '\"',\r\n        illegal: '\\\\n',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      {\r\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\r\n        end: '\\'',\r\n        illegal: '.'\r\n      },\r\n      hljs.END_SAME_AS_BEGIN({\r\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\r\n        end: /\\)([^()\\\\ ]{0,16})\"/\r\n      })\r\n    ]\r\n  };\r\n\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    variants: [\r\n      // Floating-point literal.\r\n      { begin:\r\n        \"[+-]?(?:\" // Leading sign.\r\n          // Decimal.\r\n          + \"(?:\"\r\n            +\"[0-9](?:'?[0-9])*\\\\.(?:[0-9](?:'?[0-9])*)?\"\r\n            + \"|\\\\.[0-9](?:'?[0-9])*\"\r\n          + \")(?:[Ee][+-]?[0-9](?:'?[0-9])*)?\"\r\n          + \"|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*\"\r\n          // Hexadecimal.\r\n          + \"|0[Xx](?:\"\r\n            +\"[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?\"\r\n            + \"|\\\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*\"\r\n          + \")[Pp][+-]?[0-9](?:'?[0-9])*\"\r\n        + \")(?:\" // Literal suffixes.\r\n          + \"[Ff](?:16|32|64|128)?\"\r\n          + \"|(BF|bf)16\"\r\n          + \"|[Ll]\"\r\n          + \"|\" // Literal suffix is optional.\r\n        + \")\"\r\n      },\r\n      // Integer literal.\r\n      { begin:\r\n        \"[+-]?\\\\b(?:\" // Leading sign.\r\n          + \"0[Bb][01](?:'?[01])*\" // Binary.\r\n          + \"|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*\" // Hexadecimal.\r\n          + \"|0(?:'?[0-7])*\" // Octal or just a lone zero.\r\n          + \"|[1-9](?:'?[0-9])*\" // Decimal.\r\n        + \")(?:\" // Literal suffixes.\r\n          + \"[Uu](?:LL?|ll?)\"\r\n          + \"|[Uu][Zz]?\"\r\n          + \"|(?:LL?|ll?)[Uu]?\"\r\n          + \"|[Zz][Uu]\"\r\n          + \"|\" // Literal suffix is optional.\r\n        + \")\"\r\n        // Note: there are user-defined literal suffixes too, but perhaps having the custom suffix not part of the\r\n        // literal highlight actually makes it stand out more.\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const PREPROCESSOR = {\r\n    className: 'meta',\r\n    begin: /#\\s*[a-z]+\\b/,\r\n    end: /$/,\r\n    keywords: { keyword:\r\n        'if else elif endif define undef warning error line '\r\n        + 'pragma _Pragma ifdef ifndef include' },\r\n    contains: [\r\n      {\r\n        begin: /\\\\\\n/,\r\n        relevance: 0\r\n      },\r\n      hljs.inherit(STRINGS, { className: 'string' }),\r\n      {\r\n        className: 'string',\r\n        begin: /<.*?>/\r\n      },\r\n      C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE\r\n    ]\r\n  };\r\n\r\n  const TITLE_MODE = {\r\n    className: 'title',\r\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\r\n    relevance: 0\r\n  };\r\n\r\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\r\n\r\n  // https://en.cppreference.com/w/cpp/keyword\r\n  const RESERVED_KEYWORDS = [\r\n    'alignas',\r\n    'alignof',\r\n    'and',\r\n    'and_eq',\r\n    'asm',\r\n    'atomic_cancel',\r\n    'atomic_commit',\r\n    'atomic_noexcept',\r\n    'auto',\r\n    'bitand',\r\n    'bitor',\r\n    'break',\r\n    'case',\r\n    'catch',\r\n    'class',\r\n    'co_await',\r\n    'co_return',\r\n    'co_yield',\r\n    'compl',\r\n    'concept',\r\n    'const_cast|10',\r\n    'consteval',\r\n    'constexpr',\r\n    'constinit',\r\n    'continue',\r\n    'decltype',\r\n    'default',\r\n    'delete',\r\n    'do',\r\n    'dynamic_cast|10',\r\n    'else',\r\n    'enum',\r\n    'explicit',\r\n    'export',\r\n    'extern',\r\n    'false',\r\n    'final',\r\n    'for',\r\n    'friend',\r\n    'goto',\r\n    'if',\r\n    'import',\r\n    'inline',\r\n    'module',\r\n    'mutable',\r\n    'namespace',\r\n    'new',\r\n    'noexcept',\r\n    'not',\r\n    'not_eq',\r\n    'nullptr',\r\n    'operator',\r\n    'or',\r\n    'or_eq',\r\n    'override',\r\n    'private',\r\n    'protected',\r\n    'public',\r\n    'reflexpr',\r\n    'register',\r\n    'reinterpret_cast|10',\r\n    'requires',\r\n    'return',\r\n    'sizeof',\r\n    'static_assert',\r\n    'static_cast|10',\r\n    'struct',\r\n    'switch',\r\n    'synchronized',\r\n    'template',\r\n    'this',\r\n    'thread_local',\r\n    'throw',\r\n    'transaction_safe',\r\n    'transaction_safe_dynamic',\r\n    'true',\r\n    'try',\r\n    'typedef',\r\n    'typeid',\r\n    'typename',\r\n    'union',\r\n    'using',\r\n    'virtual',\r\n    'volatile',\r\n    'while',\r\n    'xor',\r\n    'xor_eq'\r\n  ];\r\n\r\n  // https://en.cppreference.com/w/cpp/keyword\r\n  const RESERVED_TYPES = [\r\n    'bool',\r\n    'char',\r\n    'char16_t',\r\n    'char32_t',\r\n    'char8_t',\r\n    'double',\r\n    'float',\r\n    'int',\r\n    'long',\r\n    'short',\r\n    'void',\r\n    'wchar_t',\r\n    'unsigned',\r\n    'signed',\r\n    'const',\r\n    'static'\r\n  ];\r\n\r\n  const TYPE_HINTS = [\r\n    'any',\r\n    'auto_ptr',\r\n    'barrier',\r\n    'binary_semaphore',\r\n    'bitset',\r\n    'complex',\r\n    'condition_variable',\r\n    'condition_variable_any',\r\n    'counting_semaphore',\r\n    'deque',\r\n    'false_type',\r\n    'future',\r\n    'imaginary',\r\n    'initializer_list',\r\n    'istringstream',\r\n    'jthread',\r\n    'latch',\r\n    'lock_guard',\r\n    'multimap',\r\n    'multiset',\r\n    'mutex',\r\n    'optional',\r\n    'ostringstream',\r\n    'packaged_task',\r\n    'pair',\r\n    'promise',\r\n    'priority_queue',\r\n    'queue',\r\n    'recursive_mutex',\r\n    'recursive_timed_mutex',\r\n    'scoped_lock',\r\n    'set',\r\n    'shared_future',\r\n    'shared_lock',\r\n    'shared_mutex',\r\n    'shared_timed_mutex',\r\n    'shared_ptr',\r\n    'stack',\r\n    'string_view',\r\n    'stringstream',\r\n    'timed_mutex',\r\n    'thread',\r\n    'true_type',\r\n    'tuple',\r\n    'unique_lock',\r\n    'unique_ptr',\r\n    'unordered_map',\r\n    'unordered_multimap',\r\n    'unordered_multiset',\r\n    'unordered_set',\r\n    'variant',\r\n    'vector',\r\n    'weak_ptr',\r\n    'wstring',\r\n    'wstring_view'\r\n  ];\r\n\r\n  const FUNCTION_HINTS = [\r\n    'abort',\r\n    'abs',\r\n    'acos',\r\n    'apply',\r\n    'as_const',\r\n    'asin',\r\n    'atan',\r\n    'atan2',\r\n    'calloc',\r\n    'ceil',\r\n    'cerr',\r\n    'cin',\r\n    'clog',\r\n    'cos',\r\n    'cosh',\r\n    'cout',\r\n    'declval',\r\n    'endl',\r\n    'exchange',\r\n    'exit',\r\n    'exp',\r\n    'fabs',\r\n    'floor',\r\n    'fmod',\r\n    'forward',\r\n    'fprintf',\r\n    'fputs',\r\n    'free',\r\n    'frexp',\r\n    'fscanf',\r\n    'future',\r\n    'invoke',\r\n    'isalnum',\r\n    'isalpha',\r\n    'iscntrl',\r\n    'isdigit',\r\n    'isgraph',\r\n    'islower',\r\n    'isprint',\r\n    'ispunct',\r\n    'isspace',\r\n    'isupper',\r\n    'isxdigit',\r\n    'labs',\r\n    'launder',\r\n    'ldexp',\r\n    'log',\r\n    'log10',\r\n    'make_pair',\r\n    'make_shared',\r\n    'make_shared_for_overwrite',\r\n    'make_tuple',\r\n    'make_unique',\r\n    'malloc',\r\n    'memchr',\r\n    'memcmp',\r\n    'memcpy',\r\n    'memset',\r\n    'modf',\r\n    'move',\r\n    'pow',\r\n    'printf',\r\n    'putchar',\r\n    'puts',\r\n    'realloc',\r\n    'scanf',\r\n    'sin',\r\n    'sinh',\r\n    'snprintf',\r\n    'sprintf',\r\n    'sqrt',\r\n    'sscanf',\r\n    'std',\r\n    'stderr',\r\n    'stdin',\r\n    'stdout',\r\n    'strcat',\r\n    'strchr',\r\n    'strcmp',\r\n    'strcpy',\r\n    'strcspn',\r\n    'strlen',\r\n    'strncat',\r\n    'strncmp',\r\n    'strncpy',\r\n    'strpbrk',\r\n    'strrchr',\r\n    'strspn',\r\n    'strstr',\r\n    'swap',\r\n    'tan',\r\n    'tanh',\r\n    'terminate',\r\n    'to_underlying',\r\n    'tolower',\r\n    'toupper',\r\n    'vfprintf',\r\n    'visit',\r\n    'vprintf',\r\n    'vsprintf'\r\n  ];\r\n\r\n  const LITERALS = [\r\n    'NULL',\r\n    'false',\r\n    'nullopt',\r\n    'nullptr',\r\n    'true'\r\n  ];\r\n\r\n  // https://en.cppreference.com/w/cpp/keyword\r\n  const BUILT_IN = [ '_Pragma' ];\r\n\r\n  const CPP_KEYWORDS = {\r\n    type: RESERVED_TYPES,\r\n    keyword: RESERVED_KEYWORDS,\r\n    literal: LITERALS,\r\n    built_in: BUILT_IN,\r\n    _type_hints: TYPE_HINTS\r\n  };\r\n\r\n  const FUNCTION_DISPATCH = {\r\n    className: 'function.dispatch',\r\n    relevance: 0,\r\n    keywords: {\r\n      // Only for relevance, not highlighting.\r\n      _hint: FUNCTION_HINTS },\r\n    begin: regex.concat(\r\n      /\\b/,\r\n      /(?!decltype)/,\r\n      /(?!if)/,\r\n      /(?!for)/,\r\n      /(?!switch)/,\r\n      /(?!while)/,\r\n      hljs.IDENT_RE,\r\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\r\n  };\r\n\r\n  const EXPRESSION_CONTAINS = [\r\n    FUNCTION_DISPATCH,\r\n    PREPROCESSOR,\r\n    CPP_PRIMITIVE_TYPES,\r\n    C_LINE_COMMENT_MODE,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    NUMBERS,\r\n    STRINGS\r\n  ];\r\n\r\n  const EXPRESSION_CONTEXT = {\r\n    // This mode covers expression context where we can't expect a function\r\n    // definition and shouldn't highlight anything that looks like one:\r\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\r\n    variants: [\r\n      {\r\n        begin: /=/,\r\n        end: /;/\r\n      },\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/\r\n      },\r\n      {\r\n        beginKeywords: 'new throw return else',\r\n        end: /;/\r\n      }\r\n    ],\r\n    keywords: CPP_KEYWORDS,\r\n    contains: EXPRESSION_CONTAINS.concat([\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: CPP_KEYWORDS,\r\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\r\n        relevance: 0\r\n      }\r\n    ]),\r\n    relevance: 0\r\n  };\r\n\r\n  const FUNCTION_DECLARATION = {\r\n    className: 'function',\r\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\r\n    returnBegin: true,\r\n    end: /[{;=]/,\r\n    excludeEnd: true,\r\n    keywords: CPP_KEYWORDS,\r\n    illegal: /[^\\w\\s\\*&:<>.]/,\r\n    contains: [\r\n      { // to prevent it from being confused as the function title\r\n        begin: DECLTYPE_AUTO_RE,\r\n        keywords: CPP_KEYWORDS,\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: FUNCTION_TITLE,\r\n        returnBegin: true,\r\n        contains: [ TITLE_MODE ],\r\n        relevance: 0\r\n      },\r\n      // needed because we do not have look-behind on the below rule\r\n      // to prevent it from grabbing the final : in a :: pair\r\n      {\r\n        begin: /::/,\r\n        relevance: 0\r\n      },\r\n      // initializers\r\n      {\r\n        begin: /:/,\r\n        endsWithParent: true,\r\n        contains: [\r\n          STRINGS,\r\n          NUMBERS\r\n        ]\r\n      },\r\n      // allow for multiple declarations, e.g.:\r\n      // extern void f(int), g(char);\r\n      {\r\n        relevance: 0,\r\n        match: /,/\r\n      },\r\n      {\r\n        className: 'params',\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: CPP_KEYWORDS,\r\n        relevance: 0,\r\n        contains: [\r\n          C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          STRINGS,\r\n          NUMBERS,\r\n          CPP_PRIMITIVE_TYPES,\r\n          // Count matching parentheses.\r\n          {\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            keywords: CPP_KEYWORDS,\r\n            relevance: 0,\r\n            contains: [\r\n              'self',\r\n              C_LINE_COMMENT_MODE,\r\n              hljs.C_BLOCK_COMMENT_MODE,\r\n              STRINGS,\r\n              NUMBERS,\r\n              CPP_PRIMITIVE_TYPES\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      CPP_PRIMITIVE_TYPES,\r\n      C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      PREPROCESSOR\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'C++',\r\n    aliases: [\r\n      'cc',\r\n      'c++',\r\n      'h++',\r\n      'hpp',\r\n      'hh',\r\n      'hxx',\r\n      'cxx'\r\n    ],\r\n    keywords: CPP_KEYWORDS,\r\n    illegal: '</',\r\n    classNameAliases: { 'function.dispatch': 'built_in' },\r\n    contains: [].concat(\r\n      EXPRESSION_CONTEXT,\r\n      FUNCTION_DECLARATION,\r\n      FUNCTION_DISPATCH,\r\n      EXPRESSION_CONTAINS,\r\n      [\r\n        PREPROCESSOR,\r\n        { // containers: ie, `vector <int> rooms (9);`\r\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\r\n          end: '>',\r\n          keywords: CPP_KEYWORDS,\r\n          contains: [\r\n            'self',\r\n            CPP_PRIMITIVE_TYPES\r\n          ]\r\n        },\r\n        {\r\n          begin: hljs.IDENT_RE + '::',\r\n          keywords: CPP_KEYWORDS\r\n        },\r\n        {\r\n          match: [\r\n            // extra complexity to deal with `enum class` and `enum struct`\r\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\r\n            /\\s+/,\r\n            /\\w+/\r\n          ],\r\n          className: {\r\n            1: 'keyword',\r\n            3: 'title.class'\r\n          }\r\n        }\r\n      ])\r\n  };\r\n}\r\n\r\n/*\r\nLanguage: Arduino\r\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\r\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\r\nWebsite: https://www.arduino.cc\r\nCategory: system\r\n*/\r\n\r\n\r\n/** @type LanguageFn */\r\nfunction arduino(hljs) {\r\n  const ARDUINO_KW = {\r\n    type: [\r\n      \"boolean\",\r\n      \"byte\",\r\n      \"word\",\r\n      \"String\"\r\n    ],\r\n    built_in: [\r\n      \"KeyboardController\",\r\n      \"MouseController\",\r\n      \"SoftwareSerial\",\r\n      \"EthernetServer\",\r\n      \"EthernetClient\",\r\n      \"LiquidCrystal\",\r\n      \"RobotControl\",\r\n      \"GSMVoiceCall\",\r\n      \"EthernetUDP\",\r\n      \"EsploraTFT\",\r\n      \"HttpClient\",\r\n      \"RobotMotor\",\r\n      \"WiFiClient\",\r\n      \"GSMScanner\",\r\n      \"FileSystem\",\r\n      \"Scheduler\",\r\n      \"GSMServer\",\r\n      \"YunClient\",\r\n      \"YunServer\",\r\n      \"IPAddress\",\r\n      \"GSMClient\",\r\n      \"GSMModem\",\r\n      \"Keyboard\",\r\n      \"Ethernet\",\r\n      \"Console\",\r\n      \"GSMBand\",\r\n      \"Esplora\",\r\n      \"Stepper\",\r\n      \"Process\",\r\n      \"WiFiUDP\",\r\n      \"GSM_SMS\",\r\n      \"Mailbox\",\r\n      \"USBHost\",\r\n      \"Firmata\",\r\n      \"PImage\",\r\n      \"Client\",\r\n      \"Server\",\r\n      \"GSMPIN\",\r\n      \"FileIO\",\r\n      \"Bridge\",\r\n      \"Serial\",\r\n      \"EEPROM\",\r\n      \"Stream\",\r\n      \"Mouse\",\r\n      \"Audio\",\r\n      \"Servo\",\r\n      \"File\",\r\n      \"Task\",\r\n      \"GPRS\",\r\n      \"WiFi\",\r\n      \"Wire\",\r\n      \"TFT\",\r\n      \"GSM\",\r\n      \"SPI\",\r\n      \"SD\"\r\n    ],\r\n    _hints: [\r\n      \"setup\",\r\n      \"loop\",\r\n      \"runShellCommandAsynchronously\",\r\n      \"analogWriteResolution\",\r\n      \"retrieveCallingNumber\",\r\n      \"printFirmwareVersion\",\r\n      \"analogReadResolution\",\r\n      \"sendDigitalPortPair\",\r\n      \"noListenOnLocalhost\",\r\n      \"readJoystickButton\",\r\n      \"setFirmwareVersion\",\r\n      \"readJoystickSwitch\",\r\n      \"scrollDisplayRight\",\r\n      \"getVoiceCallStatus\",\r\n      \"scrollDisplayLeft\",\r\n      \"writeMicroseconds\",\r\n      \"delayMicroseconds\",\r\n      \"beginTransmission\",\r\n      \"getSignalStrength\",\r\n      \"runAsynchronously\",\r\n      \"getAsynchronously\",\r\n      \"listenOnLocalhost\",\r\n      \"getCurrentCarrier\",\r\n      \"readAccelerometer\",\r\n      \"messageAvailable\",\r\n      \"sendDigitalPorts\",\r\n      \"lineFollowConfig\",\r\n      \"countryNameWrite\",\r\n      \"runShellCommand\",\r\n      \"readStringUntil\",\r\n      \"rewindDirectory\",\r\n      \"readTemperature\",\r\n      \"setClockDivider\",\r\n      \"readLightSensor\",\r\n      \"endTransmission\",\r\n      \"analogReference\",\r\n      \"detachInterrupt\",\r\n      \"countryNameRead\",\r\n      \"attachInterrupt\",\r\n      \"encryptionType\",\r\n      \"readBytesUntil\",\r\n      \"robotNameWrite\",\r\n      \"readMicrophone\",\r\n      \"robotNameRead\",\r\n      \"cityNameWrite\",\r\n      \"userNameWrite\",\r\n      \"readJoystickY\",\r\n      \"readJoystickX\",\r\n      \"mouseReleased\",\r\n      \"openNextFile\",\r\n      \"scanNetworks\",\r\n      \"noInterrupts\",\r\n      \"digitalWrite\",\r\n      \"beginSpeaker\",\r\n      \"mousePressed\",\r\n      \"isActionDone\",\r\n      \"mouseDragged\",\r\n      \"displayLogos\",\r\n      \"noAutoscroll\",\r\n      \"addParameter\",\r\n      \"remoteNumber\",\r\n      \"getModifiers\",\r\n      \"keyboardRead\",\r\n      \"userNameRead\",\r\n      \"waitContinue\",\r\n      \"processInput\",\r\n      \"parseCommand\",\r\n      \"printVersion\",\r\n      \"readNetworks\",\r\n      \"writeMessage\",\r\n      \"blinkVersion\",\r\n      \"cityNameRead\",\r\n      \"readMessage\",\r\n      \"setDataMode\",\r\n      \"parsePacket\",\r\n      \"isListening\",\r\n      \"setBitOrder\",\r\n      \"beginPacket\",\r\n      \"isDirectory\",\r\n      \"motorsWrite\",\r\n      \"drawCompass\",\r\n      \"digitalRead\",\r\n      \"clearScreen\",\r\n      \"serialEvent\",\r\n      \"rightToLeft\",\r\n      \"setTextSize\",\r\n      \"leftToRight\",\r\n      \"requestFrom\",\r\n      \"keyReleased\",\r\n      \"compassRead\",\r\n      \"analogWrite\",\r\n      \"interrupts\",\r\n      \"WiFiServer\",\r\n      \"disconnect\",\r\n      \"playMelody\",\r\n      \"parseFloat\",\r\n      \"autoscroll\",\r\n      \"getPINUsed\",\r\n      \"setPINUsed\",\r\n      \"setTimeout\",\r\n      \"sendAnalog\",\r\n      \"readSlider\",\r\n      \"analogRead\",\r\n      \"beginWrite\",\r\n      \"createChar\",\r\n      \"motorsStop\",\r\n      \"keyPressed\",\r\n      \"tempoWrite\",\r\n      \"readButton\",\r\n      \"subnetMask\",\r\n      \"debugPrint\",\r\n      \"macAddress\",\r\n      \"writeGreen\",\r\n      \"randomSeed\",\r\n      \"attachGPRS\",\r\n      \"readString\",\r\n      \"sendString\",\r\n      \"remotePort\",\r\n      \"releaseAll\",\r\n      \"mouseMoved\",\r\n      \"background\",\r\n      \"getXChange\",\r\n      \"getYChange\",\r\n      \"answerCall\",\r\n      \"getResult\",\r\n      \"voiceCall\",\r\n      \"endPacket\",\r\n      \"constrain\",\r\n      \"getSocket\",\r\n      \"writeJSON\",\r\n      \"getButton\",\r\n      \"available\",\r\n      \"connected\",\r\n      \"findUntil\",\r\n      \"readBytes\",\r\n      \"exitValue\",\r\n      \"readGreen\",\r\n      \"writeBlue\",\r\n      \"startLoop\",\r\n      \"IPAddress\",\r\n      \"isPressed\",\r\n      \"sendSysex\",\r\n      \"pauseMode\",\r\n      \"gatewayIP\",\r\n      \"setCursor\",\r\n      \"getOemKey\",\r\n      \"tuneWrite\",\r\n      \"noDisplay\",\r\n      \"loadImage\",\r\n      \"switchPIN\",\r\n      \"onRequest\",\r\n      \"onReceive\",\r\n      \"changePIN\",\r\n      \"playFile\",\r\n      \"noBuffer\",\r\n      \"parseInt\",\r\n      \"overflow\",\r\n      \"checkPIN\",\r\n      \"knobRead\",\r\n      \"beginTFT\",\r\n      \"bitClear\",\r\n      \"updateIR\",\r\n      \"bitWrite\",\r\n      \"position\",\r\n      \"writeRGB\",\r\n      \"highByte\",\r\n      \"writeRed\",\r\n      \"setSpeed\",\r\n      \"readBlue\",\r\n      \"noStroke\",\r\n      \"remoteIP\",\r\n      \"transfer\",\r\n      \"shutdown\",\r\n      \"hangCall\",\r\n      \"beginSMS\",\r\n      \"endWrite\",\r\n      \"attached\",\r\n      \"maintain\",\r\n      \"noCursor\",\r\n      \"checkReg\",\r\n      \"checkPUK\",\r\n      \"shiftOut\",\r\n      \"isValid\",\r\n      \"shiftIn\",\r\n      \"pulseIn\",\r\n      \"connect\",\r\n      \"println\",\r\n      \"localIP\",\r\n      \"pinMode\",\r\n      \"getIMEI\",\r\n      \"display\",\r\n      \"noBlink\",\r\n      \"process\",\r\n      \"getBand\",\r\n      \"running\",\r\n      \"beginSD\",\r\n      \"drawBMP\",\r\n      \"lowByte\",\r\n      \"setBand\",\r\n      \"release\",\r\n      \"bitRead\",\r\n      \"prepare\",\r\n      \"pointTo\",\r\n      \"readRed\",\r\n      \"setMode\",\r\n      \"noFill\",\r\n      \"remove\",\r\n      \"listen\",\r\n      \"stroke\",\r\n      \"detach\",\r\n      \"attach\",\r\n      \"noTone\",\r\n      \"exists\",\r\n      \"buffer\",\r\n      \"height\",\r\n      \"bitSet\",\r\n      \"circle\",\r\n      \"config\",\r\n      \"cursor\",\r\n      \"random\",\r\n      \"IRread\",\r\n      \"setDNS\",\r\n      \"endSMS\",\r\n      \"getKey\",\r\n      \"micros\",\r\n      \"millis\",\r\n      \"begin\",\r\n      \"print\",\r\n      \"write\",\r\n      \"ready\",\r\n      \"flush\",\r\n      \"width\",\r\n      \"isPIN\",\r\n      \"blink\",\r\n      \"clear\",\r\n      \"press\",\r\n      \"mkdir\",\r\n      \"rmdir\",\r\n      \"close\",\r\n      \"point\",\r\n      \"yield\",\r\n      \"image\",\r\n      \"BSSID\",\r\n      \"click\",\r\n      \"delay\",\r\n      \"read\",\r\n      \"text\",\r\n      \"move\",\r\n      \"peek\",\r\n      \"beep\",\r\n      \"rect\",\r\n      \"line\",\r\n      \"open\",\r\n      \"seek\",\r\n      \"fill\",\r\n      \"size\",\r\n      \"turn\",\r\n      \"stop\",\r\n      \"home\",\r\n      \"find\",\r\n      \"step\",\r\n      \"tone\",\r\n      \"sqrt\",\r\n      \"RSSI\",\r\n      \"SSID\",\r\n      \"end\",\r\n      \"bit\",\r\n      \"tan\",\r\n      \"cos\",\r\n      \"sin\",\r\n      \"pow\",\r\n      \"map\",\r\n      \"abs\",\r\n      \"max\",\r\n      \"min\",\r\n      \"get\",\r\n      \"run\",\r\n      \"put\"\r\n    ],\r\n    literal: [\r\n      \"DIGITAL_MESSAGE\",\r\n      \"FIRMATA_STRING\",\r\n      \"ANALOG_MESSAGE\",\r\n      \"REPORT_DIGITAL\",\r\n      \"REPORT_ANALOG\",\r\n      \"INPUT_PULLUP\",\r\n      \"SET_PIN_MODE\",\r\n      \"INTERNAL2V56\",\r\n      \"SYSTEM_RESET\",\r\n      \"LED_BUILTIN\",\r\n      \"INTERNAL1V1\",\r\n      \"SYSEX_START\",\r\n      \"INTERNAL\",\r\n      \"EXTERNAL\",\r\n      \"DEFAULT\",\r\n      \"OUTPUT\",\r\n      \"INPUT\",\r\n      \"HIGH\",\r\n      \"LOW\"\r\n    ]\r\n  };\r\n\r\n  const ARDUINO = cPlusPlus(hljs);\r\n\r\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\r\n\r\n  kws.type = [\r\n    ...kws.type,\r\n    ...ARDUINO_KW.type\r\n  ];\r\n  kws.literal = [\r\n    ...kws.literal,\r\n    ...ARDUINO_KW.literal\r\n  ];\r\n  kws.built_in = [\r\n    ...kws.built_in,\r\n    ...ARDUINO_KW.built_in\r\n  ];\r\n  kws._hints = ARDUINO_KW._hints;\r\n\r\n  ARDUINO.name = 'Arduino';\r\n  ARDUINO.aliases = [ 'ino' ];\r\n  ARDUINO.supersetOf = \"cpp\";\r\n\r\n  return ARDUINO;\r\n}\r\n\r\nmodule.exports = arduino;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}