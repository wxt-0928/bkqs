{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\r\nLanguage: PHP\r\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\r\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nWebsite: https://www.php.net\r\nCategory: common\r\n*/\n\n/**\r\n * @param {HLJSApi} hljs\r\n * @returns {LanguageDetail}\r\n * */\nfunction php(hljs) {\n  const regex = hljs.regex;\n  // negative look-ahead tries to avoid matching patterns that are not\n  // Perl at all like $ident$, @ident@, etc.\n  const NOT_PERL_ETC = /(?![A-Za-z0-9])(?![$])/;\n  const IDENT_RE = regex.concat(/[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/, NOT_PERL_ETC);\n  // Will not detect camelCase classes\n  const PASCAL_CASE_CLASS_NAME_RE = regex.concat(/(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/, NOT_PERL_ETC);\n  const VARIABLE = {\n    scope: 'variable',\n    match: '\\\\$+' + IDENT_RE\n  };\n  const PREPROCESSOR = {\n    scope: 'meta',\n    variants: [{\n      begin: /<\\?php/,\n      relevance: 10\n    },\n    // boost for obvious PHP\n    {\n      begin: /<\\?=/\n    },\n    // less relevant per PSR-1 which says not to use short-tags\n    {\n      begin: /<\\?/,\n      relevance: 0.1\n    }, {\n      begin: /\\?>/\n    } // end php tag\n    ]\n  };\n\n  const SUBST = {\n    scope: 'subst',\n    variants: [{\n      begin: /\\$\\w+/\n    }, {\n      begin: /\\{\\$/,\n      end: /\\}/\n    }]\n  };\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null\n  });\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST)\n  });\n  const HEREDOC = {\n    begin: /<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,\n    end: /[ \\t]*(\\w+)\\b/,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n    'on:begin': (m, resp) => {\n      resp.data._beginMatch = m[1] || m[2];\n    },\n    'on:end': (m, resp) => {\n      if (resp.data._beginMatch !== m[1]) resp.ignoreMatch();\n    }\n  };\n  const NOWDOC = hljs.END_SAME_AS_BEGIN({\n    begin: /<<<[ \\t]*'(\\w+)'\\n/,\n    end: /[ \\t]*(\\w+)\\b/\n  });\n  // list of valid whitespaces because non-breaking space might be part of a IDENT_RE\n  const WHITESPACE = '[ \\t\\n]';\n  const STRING = {\n    scope: 'string',\n    variants: [DOUBLE_QUOTED, SINGLE_QUOTED, HEREDOC, NOWDOC]\n  };\n  const NUMBER = {\n    scope: 'number',\n    variants: [{\n      begin: `\\\\b0[bB][01]+(?:_[01]+)*\\\\b`\n    },\n    // Binary w/ underscore support\n    {\n      begin: `\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b`\n    },\n    // Octals w/ underscore support\n    {\n      begin: `\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b`\n    },\n    // Hex w/ underscore support\n    // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\n    {\n      begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?`\n    }],\n    relevance: 0\n  };\n  const LITERALS = [\"false\", \"null\", \"true\"];\n  const KWS = [\n  // Magic constants:\n  // <https://www.php.net/manual/en/language.constants.predefined.php>\n  \"__CLASS__\", \"__DIR__\", \"__FILE__\", \"__FUNCTION__\", \"__COMPILER_HALT_OFFSET__\", \"__LINE__\", \"__METHOD__\", \"__NAMESPACE__\", \"__TRAIT__\",\n  // Function that look like language construct or language construct that look like function:\n  // List of keywords that may not require parenthesis\n  \"die\", \"echo\", \"exit\", \"include\", \"include_once\", \"print\", \"require\", \"require_once\",\n  // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\n  // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\n  // Other keywords:\n  // <https://www.php.net/manual/en/reserved.php>\n  // <https://www.php.net/manual/en/language.types.type-juggling.php>\n  \"array\", \"abstract\", \"and\", \"as\", \"binary\", \"bool\", \"boolean\", \"break\", \"callable\", \"case\", \"catch\", \"class\", \"clone\", \"const\", \"continue\", \"declare\", \"default\", \"do\", \"double\", \"else\", \"elseif\", \"empty\", \"enddeclare\", \"endfor\", \"endforeach\", \"endif\", \"endswitch\", \"endwhile\", \"enum\", \"eval\", \"extends\", \"final\", \"finally\", \"float\", \"for\", \"foreach\", \"from\", \"global\", \"goto\", \"if\", \"implements\", \"instanceof\", \"insteadof\", \"int\", \"integer\", \"interface\", \"isset\", \"iterable\", \"list\", \"match|0\", \"mixed\", \"new\", \"never\", \"object\", \"or\", \"private\", \"protected\", \"public\", \"readonly\", \"real\", \"return\", \"string\", \"switch\", \"throw\", \"trait\", \"try\", \"unset\", \"use\", \"var\", \"void\", \"while\", \"xor\", \"yield\"];\n  const BUILT_INS = [\n  // Standard PHP library:\n  // <https://www.php.net/manual/en/book.spl.php>\n  \"Error|0\", \"AppendIterator\", \"ArgumentCountError\", \"ArithmeticError\", \"ArrayIterator\", \"ArrayObject\", \"AssertionError\", \"BadFunctionCallException\", \"BadMethodCallException\", \"CachingIterator\", \"CallbackFilterIterator\", \"CompileError\", \"Countable\", \"DirectoryIterator\", \"DivisionByZeroError\", \"DomainException\", \"EmptyIterator\", \"ErrorException\", \"Exception\", \"FilesystemIterator\", \"FilterIterator\", \"GlobIterator\", \"InfiniteIterator\", \"InvalidArgumentException\", \"IteratorIterator\", \"LengthException\", \"LimitIterator\", \"LogicException\", \"MultipleIterator\", \"NoRewindIterator\", \"OutOfBoundsException\", \"OutOfRangeException\", \"OuterIterator\", \"OverflowException\", \"ParentIterator\", \"ParseError\", \"RangeException\", \"RecursiveArrayIterator\", \"RecursiveCachingIterator\", \"RecursiveCallbackFilterIterator\", \"RecursiveDirectoryIterator\", \"RecursiveFilterIterator\", \"RecursiveIterator\", \"RecursiveIteratorIterator\", \"RecursiveRegexIterator\", \"RecursiveTreeIterator\", \"RegexIterator\", \"RuntimeException\", \"SeekableIterator\", \"SplDoublyLinkedList\", \"SplFileInfo\", \"SplFileObject\", \"SplFixedArray\", \"SplHeap\", \"SplMaxHeap\", \"SplMinHeap\", \"SplObjectStorage\", \"SplObserver\", \"SplPriorityQueue\", \"SplQueue\", \"SplStack\", \"SplSubject\", \"SplTempFileObject\", \"TypeError\", \"UnderflowException\", \"UnexpectedValueException\", \"UnhandledMatchError\",\n  // Reserved interfaces:\n  // <https://www.php.net/manual/en/reserved.interfaces.php>\n  \"ArrayAccess\", \"BackedEnum\", \"Closure\", \"Fiber\", \"Generator\", \"Iterator\", \"IteratorAggregate\", \"Serializable\", \"Stringable\", \"Throwable\", \"Traversable\", \"UnitEnum\", \"WeakReference\", \"WeakMap\",\n  // Reserved classes:\n  // <https://www.php.net/manual/en/reserved.classes.php>\n  \"Directory\", \"__PHP_Incomplete_Class\", \"parent\", \"php_user_filter\", \"self\", \"static\", \"stdClass\"];\n\n  /** Dual-case keywords\r\n   *\r\n   * [\"then\",\"FILE\"] =>\r\n   *     [\"then\", \"THEN\", \"FILE\", \"file\"]\r\n   *\r\n   * @param {string[]} items */\n  const dualCase = items => {\n    /** @type string[] */\n    const result = [];\n    items.forEach(item => {\n      result.push(item);\n      if (item.toLowerCase() === item) {\n        result.push(item.toUpperCase());\n      } else {\n        result.push(item.toLowerCase());\n      }\n    });\n    return result;\n  };\n  const KEYWORDS = {\n    keyword: KWS,\n    literal: dualCase(LITERALS),\n    built_in: BUILT_INS\n  };\n\n  /**\r\n   * @param {string[]} items */\n  const normalizeKeywords = items => {\n    return items.map(item => {\n      return item.replace(/\\|\\d+$/, \"\");\n    });\n  };\n  const CONSTRUCTOR_CALL = {\n    variants: [{\n      match: [/new/, regex.concat(WHITESPACE, \"+\"),\n      // to prevent built ins from being confused as the class constructor call\n      regex.concat(\"(?!\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"), PASCAL_CASE_CLASS_NAME_RE],\n      scope: {\n        1: \"keyword\",\n        4: \"title.class\"\n      }\n    }]\n  };\n  const CONSTANT_REFERENCE = regex.concat(IDENT_RE, \"\\\\b(?!\\\\()\");\n  const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON = {\n    variants: [{\n      match: [regex.concat(/::/, regex.lookahead(/(?!class\\b)/)), CONSTANT_REFERENCE],\n      scope: {\n        2: \"variable.constant\"\n      }\n    }, {\n      match: [/::/, /class/],\n      scope: {\n        2: \"variable.language\"\n      }\n    }, {\n      match: [PASCAL_CASE_CLASS_NAME_RE, regex.concat(/::/, regex.lookahead(/(?!class\\b)/)), CONSTANT_REFERENCE],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.constant\"\n      }\n    }, {\n      match: [PASCAL_CASE_CLASS_NAME_RE, regex.concat(\"::\", regex.lookahead(/(?!class\\b)/))],\n      scope: {\n        1: \"title.class\"\n      }\n    }, {\n      match: [PASCAL_CASE_CLASS_NAME_RE, /::/, /class/],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.language\"\n      }\n    }]\n  };\n  const NAMED_ARGUMENT = {\n    scope: 'attr',\n    match: regex.concat(IDENT_RE, regex.lookahead(':'), regex.lookahead(/(?!::)/))\n  };\n  const PARAMS_MODE = {\n    relevance: 0,\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [NAMED_ARGUMENT, VARIABLE, LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON, hljs.C_BLOCK_COMMENT_MODE, STRING, NUMBER, CONSTRUCTOR_CALL]\n  };\n  const FUNCTION_INVOKE = {\n    relevance: 0,\n    match: [/\\b/,\n    // to prevent keywords from being confused as the function title\n    regex.concat(\"(?!fn\\\\b|function\\\\b|\", normalizeKeywords(KWS).join(\"\\\\b|\"), \"|\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"), IDENT_RE, regex.concat(WHITESPACE, \"*\"), regex.lookahead(/(?=\\()/)],\n    scope: {\n      3: \"title.function.invoke\"\n    },\n    contains: [PARAMS_MODE]\n  };\n  PARAMS_MODE.contains.push(FUNCTION_INVOKE);\n  const ATTRIBUTE_CONTAINS = [NAMED_ARGUMENT, LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON, hljs.C_BLOCK_COMMENT_MODE, STRING, NUMBER, CONSTRUCTOR_CALL];\n  const ATTRIBUTES = {\n    begin: regex.concat(/#\\[\\s*/, PASCAL_CASE_CLASS_NAME_RE),\n    beginScope: \"meta\",\n    end: /]/,\n    endScope: \"meta\",\n    keywords: {\n      literal: LITERALS,\n      keyword: ['new', 'array']\n    },\n    contains: [{\n      begin: /\\[/,\n      end: /]/,\n      keywords: {\n        literal: LITERALS,\n        keyword: ['new', 'array']\n      },\n      contains: ['self', ...ATTRIBUTE_CONTAINS]\n    }, ...ATTRIBUTE_CONTAINS, {\n      scope: 'meta',\n      match: PASCAL_CASE_CLASS_NAME_RE\n    }]\n  };\n  return {\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [ATTRIBUTES, hljs.HASH_COMMENT_MODE, hljs.COMMENT('//', '$'), hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: [{\n        scope: 'doctag',\n        match: '@[A-Za-z]+'\n      }]\n    }), {\n      match: /__halt_compiler\\(\\);/,\n      keywords: '__halt_compiler',\n      starts: {\n        scope: \"comment\",\n        end: hljs.MATCH_NOTHING_RE,\n        contains: [{\n          match: /\\?>/,\n          scope: \"meta\",\n          endsParent: true\n        }]\n      }\n    }, PREPROCESSOR, {\n      scope: 'variable.language',\n      match: /\\$this\\b/\n    }, VARIABLE, FUNCTION_INVOKE, LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON, {\n      match: [/const/, /\\s/, IDENT_RE],\n      scope: {\n        1: \"keyword\",\n        3: \"variable.constant\"\n      }\n    }, CONSTRUCTOR_CALL, {\n      scope: 'function',\n      relevance: 0,\n      beginKeywords: 'fn function',\n      end: /[;{]/,\n      excludeEnd: true,\n      illegal: '[$%\\\\[]',\n      contains: [{\n        beginKeywords: 'use'\n      }, hljs.UNDERSCORE_TITLE_MODE, {\n        begin: '=>',\n        // No markup, just a relevance booster\n        endsParent: true\n      }, {\n        scope: 'params',\n        begin: '\\\\(',\n        end: '\\\\)',\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: ['self', VARIABLE, LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON, hljs.C_BLOCK_COMMENT_MODE, STRING, NUMBER]\n      }]\n    }, {\n      scope: 'class',\n      variants: [{\n        beginKeywords: \"enum\",\n        illegal: /[($\"]/\n      }, {\n        beginKeywords: \"class interface trait\",\n        illegal: /[:($\"]/\n      }],\n      relevance: 0,\n      end: /\\{/,\n      excludeEnd: true,\n      contains: [{\n        beginKeywords: 'extends implements'\n      }, hljs.UNDERSCORE_TITLE_MODE]\n    },\n    // both use and namespace still use \"old style\" rules (vs multi-match)\n    // because the namespace name can include `\\` and we still want each\n    // element to be treated as its own *individual* title\n    {\n      beginKeywords: 'namespace',\n      relevance: 0,\n      end: ';',\n      illegal: /[.']/,\n      contains: [hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n        scope: \"title.class\"\n      })]\n    }, {\n      beginKeywords: 'use',\n      relevance: 0,\n      end: ';',\n      contains: [\n      // TODO: title.function vs title.class\n      {\n        match: /\\b(as|const|function)\\b/,\n        scope: \"keyword\"\n      },\n      // TODO: could be title.class or title.function\n      hljs.UNDERSCORE_TITLE_MODE]\n    }, STRING, NUMBER]\n  };\n}\nmodule.exports = php;","map":{"version":3,"names":["php","hljs","regex","NOT_PERL_ETC","IDENT_RE","concat","PASCAL_CASE_CLASS_NAME_RE","VARIABLE","scope","match","PREPROCESSOR","variants","begin","relevance","SUBST","end","SINGLE_QUOTED","inherit","APOS_STRING_MODE","illegal","DOUBLE_QUOTED","QUOTE_STRING_MODE","contains","HEREDOC","on:begin","m","resp","data","_beginMatch","on:end","ignoreMatch","NOWDOC","END_SAME_AS_BEGIN","WHITESPACE","STRING","NUMBER","LITERALS","KWS","BUILT_INS","dualCase","items","result","forEach","item","push","toLowerCase","toUpperCase","KEYWORDS","keyword","literal","built_in","normalizeKeywords","map","replace","CONSTRUCTOR_CALL","join","CONSTANT_REFERENCE","LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON","lookahead","NAMED_ARGUMENT","PARAMS_MODE","keywords","C_BLOCK_COMMENT_MODE","FUNCTION_INVOKE","ATTRIBUTE_CONTAINS","ATTRIBUTES","beginScope","endScope","case_insensitive","HASH_COMMENT_MODE","COMMENT","starts","MATCH_NOTHING_RE","endsParent","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","excludeBegin","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/php.js"],"sourcesContent":["/*\r\nLanguage: PHP\r\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\r\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nWebsite: https://www.php.net\r\nCategory: common\r\n*/\r\n\r\n/**\r\n * @param {HLJSApi} hljs\r\n * @returns {LanguageDetail}\r\n * */\r\nfunction php(hljs) {\r\n  const regex = hljs.regex;\r\n  // negative look-ahead tries to avoid matching patterns that are not\r\n  // Perl at all like $ident$, @ident@, etc.\r\n  const NOT_PERL_ETC = /(?![A-Za-z0-9])(?![$])/;\r\n  const IDENT_RE = regex.concat(\r\n    /[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,\r\n    NOT_PERL_ETC);\r\n  // Will not detect camelCase classes\r\n  const PASCAL_CASE_CLASS_NAME_RE = regex.concat(\r\n    /(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,\r\n    NOT_PERL_ETC);\r\n  const VARIABLE = {\r\n    scope: 'variable',\r\n    match: '\\\\$+' + IDENT_RE,\r\n  };\r\n  const PREPROCESSOR = {\r\n    scope: 'meta',\r\n    variants: [\r\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\r\n      { begin: /<\\?=/ },\r\n      // less relevant per PSR-1 which says not to use short-tags\r\n      { begin: /<\\?/, relevance: 0.1 },\r\n      { begin: /\\?>/ } // end php tag\r\n    ]\r\n  };\r\n  const SUBST = {\r\n    scope: 'subst',\r\n    variants: [\r\n      { begin: /\\$\\w+/ },\r\n      {\r\n        begin: /\\{\\$/,\r\n        end: /\\}/\r\n      }\r\n    ]\r\n  };\r\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null, });\r\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n    illegal: null,\r\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\r\n  });\r\n\r\n  const HEREDOC = {\r\n    begin: /<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,\r\n    end: /[ \\t]*(\\w+)\\b/,\r\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\r\n    'on:begin': (m, resp) => { resp.data._beginMatch = m[1] || m[2]; },\r\n    'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); },\r\n  };\r\n\r\n  const NOWDOC = hljs.END_SAME_AS_BEGIN({\r\n    begin: /<<<[ \\t]*'(\\w+)'\\n/,\r\n    end: /[ \\t]*(\\w+)\\b/,\r\n  });\r\n  // list of valid whitespaces because non-breaking space might be part of a IDENT_RE\r\n  const WHITESPACE = '[ \\t\\n]';\r\n  const STRING = {\r\n    scope: 'string',\r\n    variants: [\r\n      DOUBLE_QUOTED,\r\n      SINGLE_QUOTED,\r\n      HEREDOC,\r\n      NOWDOC\r\n    ]\r\n  };\r\n  const NUMBER = {\r\n    scope: 'number',\r\n    variants: [\r\n      { begin: `\\\\b0[bB][01]+(?:_[01]+)*\\\\b` }, // Binary w/ underscore support\r\n      { begin: `\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b` }, // Octals w/ underscore support\r\n      { begin: `\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b` }, // Hex w/ underscore support\r\n      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\r\n      { begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?` }\r\n    ],\r\n    relevance: 0\r\n  };\r\n  const LITERALS = [\r\n    \"false\",\r\n    \"null\",\r\n    \"true\"\r\n  ];\r\n  const KWS = [\r\n    // Magic constants:\r\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\r\n    \"__CLASS__\",\r\n    \"__DIR__\",\r\n    \"__FILE__\",\r\n    \"__FUNCTION__\",\r\n    \"__COMPILER_HALT_OFFSET__\",\r\n    \"__LINE__\",\r\n    \"__METHOD__\",\r\n    \"__NAMESPACE__\",\r\n    \"__TRAIT__\",\r\n    // Function that look like language construct or language construct that look like function:\r\n    // List of keywords that may not require parenthesis\r\n    \"die\",\r\n    \"echo\",\r\n    \"exit\",\r\n    \"include\",\r\n    \"include_once\",\r\n    \"print\",\r\n    \"require\",\r\n    \"require_once\",\r\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\r\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\r\n    // Other keywords:\r\n    // <https://www.php.net/manual/en/reserved.php>\r\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\r\n    \"array\",\r\n    \"abstract\",\r\n    \"and\",\r\n    \"as\",\r\n    \"binary\",\r\n    \"bool\",\r\n    \"boolean\",\r\n    \"break\",\r\n    \"callable\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"clone\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"declare\",\r\n    \"default\",\r\n    \"do\",\r\n    \"double\",\r\n    \"else\",\r\n    \"elseif\",\r\n    \"empty\",\r\n    \"enddeclare\",\r\n    \"endfor\",\r\n    \"endforeach\",\r\n    \"endif\",\r\n    \"endswitch\",\r\n    \"endwhile\",\r\n    \"enum\",\r\n    \"eval\",\r\n    \"extends\",\r\n    \"final\",\r\n    \"finally\",\r\n    \"float\",\r\n    \"for\",\r\n    \"foreach\",\r\n    \"from\",\r\n    \"global\",\r\n    \"goto\",\r\n    \"if\",\r\n    \"implements\",\r\n    \"instanceof\",\r\n    \"insteadof\",\r\n    \"int\",\r\n    \"integer\",\r\n    \"interface\",\r\n    \"isset\",\r\n    \"iterable\",\r\n    \"list\",\r\n    \"match|0\",\r\n    \"mixed\",\r\n    \"new\",\r\n    \"never\",\r\n    \"object\",\r\n    \"or\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"public\",\r\n    \"readonly\",\r\n    \"real\",\r\n    \"return\",\r\n    \"string\",\r\n    \"switch\",\r\n    \"throw\",\r\n    \"trait\",\r\n    \"try\",\r\n    \"unset\",\r\n    \"use\",\r\n    \"var\",\r\n    \"void\",\r\n    \"while\",\r\n    \"xor\",\r\n    \"yield\"\r\n  ];\r\n\r\n  const BUILT_INS = [\r\n    // Standard PHP library:\r\n    // <https://www.php.net/manual/en/book.spl.php>\r\n    \"Error|0\",\r\n    \"AppendIterator\",\r\n    \"ArgumentCountError\",\r\n    \"ArithmeticError\",\r\n    \"ArrayIterator\",\r\n    \"ArrayObject\",\r\n    \"AssertionError\",\r\n    \"BadFunctionCallException\",\r\n    \"BadMethodCallException\",\r\n    \"CachingIterator\",\r\n    \"CallbackFilterIterator\",\r\n    \"CompileError\",\r\n    \"Countable\",\r\n    \"DirectoryIterator\",\r\n    \"DivisionByZeroError\",\r\n    \"DomainException\",\r\n    \"EmptyIterator\",\r\n    \"ErrorException\",\r\n    \"Exception\",\r\n    \"FilesystemIterator\",\r\n    \"FilterIterator\",\r\n    \"GlobIterator\",\r\n    \"InfiniteIterator\",\r\n    \"InvalidArgumentException\",\r\n    \"IteratorIterator\",\r\n    \"LengthException\",\r\n    \"LimitIterator\",\r\n    \"LogicException\",\r\n    \"MultipleIterator\",\r\n    \"NoRewindIterator\",\r\n    \"OutOfBoundsException\",\r\n    \"OutOfRangeException\",\r\n    \"OuterIterator\",\r\n    \"OverflowException\",\r\n    \"ParentIterator\",\r\n    \"ParseError\",\r\n    \"RangeException\",\r\n    \"RecursiveArrayIterator\",\r\n    \"RecursiveCachingIterator\",\r\n    \"RecursiveCallbackFilterIterator\",\r\n    \"RecursiveDirectoryIterator\",\r\n    \"RecursiveFilterIterator\",\r\n    \"RecursiveIterator\",\r\n    \"RecursiveIteratorIterator\",\r\n    \"RecursiveRegexIterator\",\r\n    \"RecursiveTreeIterator\",\r\n    \"RegexIterator\",\r\n    \"RuntimeException\",\r\n    \"SeekableIterator\",\r\n    \"SplDoublyLinkedList\",\r\n    \"SplFileInfo\",\r\n    \"SplFileObject\",\r\n    \"SplFixedArray\",\r\n    \"SplHeap\",\r\n    \"SplMaxHeap\",\r\n    \"SplMinHeap\",\r\n    \"SplObjectStorage\",\r\n    \"SplObserver\",\r\n    \"SplPriorityQueue\",\r\n    \"SplQueue\",\r\n    \"SplStack\",\r\n    \"SplSubject\",\r\n    \"SplTempFileObject\",\r\n    \"TypeError\",\r\n    \"UnderflowException\",\r\n    \"UnexpectedValueException\",\r\n    \"UnhandledMatchError\",\r\n    // Reserved interfaces:\r\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\r\n    \"ArrayAccess\",\r\n    \"BackedEnum\",\r\n    \"Closure\",\r\n    \"Fiber\",\r\n    \"Generator\",\r\n    \"Iterator\",\r\n    \"IteratorAggregate\",\r\n    \"Serializable\",\r\n    \"Stringable\",\r\n    \"Throwable\",\r\n    \"Traversable\",\r\n    \"UnitEnum\",\r\n    \"WeakReference\",\r\n    \"WeakMap\",\r\n    // Reserved classes:\r\n    // <https://www.php.net/manual/en/reserved.classes.php>\r\n    \"Directory\",\r\n    \"__PHP_Incomplete_Class\",\r\n    \"parent\",\r\n    \"php_user_filter\",\r\n    \"self\",\r\n    \"static\",\r\n    \"stdClass\"\r\n  ];\r\n\r\n  /** Dual-case keywords\r\n   *\r\n   * [\"then\",\"FILE\"] =>\r\n   *     [\"then\", \"THEN\", \"FILE\", \"file\"]\r\n   *\r\n   * @param {string[]} items */\r\n  const dualCase = (items) => {\r\n    /** @type string[] */\r\n    const result = [];\r\n    items.forEach(item => {\r\n      result.push(item);\r\n      if (item.toLowerCase() === item) {\r\n        result.push(item.toUpperCase());\r\n      } else {\r\n        result.push(item.toLowerCase());\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const KEYWORDS = {\r\n    keyword: KWS,\r\n    literal: dualCase(LITERALS),\r\n    built_in: BUILT_INS,\r\n  };\r\n\r\n  /**\r\n   * @param {string[]} items */\r\n  const normalizeKeywords = (items) => {\r\n    return items.map(item => {\r\n      return item.replace(/\\|\\d+$/, \"\");\r\n    });\r\n  };\r\n\r\n  const CONSTRUCTOR_CALL = { variants: [\r\n    {\r\n      match: [\r\n        /new/,\r\n        regex.concat(WHITESPACE, \"+\"),\r\n        // to prevent built ins from being confused as the class constructor call\r\n        regex.concat(\"(?!\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n      ],\r\n      scope: {\r\n        1: \"keyword\",\r\n        4: \"title.class\",\r\n      },\r\n    }\r\n  ] };\r\n\r\n  const CONSTANT_REFERENCE = regex.concat(IDENT_RE, \"\\\\b(?!\\\\()\");\r\n\r\n  const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON = { variants: [\r\n    {\r\n      match: [\r\n        regex.concat(\r\n          /::/,\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n        CONSTANT_REFERENCE,\r\n      ],\r\n      scope: { 2: \"variable.constant\", },\r\n    },\r\n    {\r\n      match: [\r\n        /::/,\r\n        /class/,\r\n      ],\r\n      scope: { 2: \"variable.language\", },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        regex.concat(\r\n          /::/,\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n        CONSTANT_REFERENCE,\r\n      ],\r\n      scope: {\r\n        1: \"title.class\",\r\n        3: \"variable.constant\",\r\n      },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        regex.concat(\r\n          \"::\",\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n      ],\r\n      scope: { 1: \"title.class\", },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        /::/,\r\n        /class/,\r\n      ],\r\n      scope: {\r\n        1: \"title.class\",\r\n        3: \"variable.language\",\r\n      },\r\n    }\r\n  ] };\r\n\r\n  const NAMED_ARGUMENT = {\r\n    scope: 'attr',\r\n    match: regex.concat(IDENT_RE, regex.lookahead(':'), regex.lookahead(/(?!::)/)),\r\n  };\r\n  const PARAMS_MODE = {\r\n    relevance: 0,\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      NAMED_ARGUMENT,\r\n      VARIABLE,\r\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      STRING,\r\n      NUMBER,\r\n      CONSTRUCTOR_CALL,\r\n    ],\r\n  };\r\n  const FUNCTION_INVOKE = {\r\n    relevance: 0,\r\n    match: [\r\n      /\\b/,\r\n      // to prevent keywords from being confused as the function title\r\n      regex.concat(\"(?!fn\\\\b|function\\\\b|\", normalizeKeywords(KWS).join(\"\\\\b|\"), \"|\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\r\n      IDENT_RE,\r\n      regex.concat(WHITESPACE, \"*\"),\r\n      regex.lookahead(/(?=\\()/)\r\n    ],\r\n    scope: { 3: \"title.function.invoke\", },\r\n    contains: [ PARAMS_MODE ]\r\n  };\r\n  PARAMS_MODE.contains.push(FUNCTION_INVOKE);\r\n\r\n  const ATTRIBUTE_CONTAINS = [\r\n    NAMED_ARGUMENT,\r\n    LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    STRING,\r\n    NUMBER,\r\n    CONSTRUCTOR_CALL,\r\n  ];\r\n\r\n  const ATTRIBUTES = {\r\n    begin: regex.concat(/#\\[\\s*/, PASCAL_CASE_CLASS_NAME_RE),\r\n    beginScope: \"meta\",\r\n    end: /]/,\r\n    endScope: \"meta\",\r\n    keywords: {\r\n      literal: LITERALS,\r\n      keyword: [\r\n        'new',\r\n        'array',\r\n      ]\r\n    },\r\n    contains: [\r\n      {\r\n        begin: /\\[/,\r\n        end: /]/,\r\n        keywords: {\r\n          literal: LITERALS,\r\n          keyword: [\r\n            'new',\r\n            'array',\r\n          ]\r\n        },\r\n        contains: [\r\n          'self',\r\n          ...ATTRIBUTE_CONTAINS,\r\n        ]\r\n      },\r\n      ...ATTRIBUTE_CONTAINS,\r\n      {\r\n        scope: 'meta',\r\n        match: PASCAL_CASE_CLASS_NAME_RE\r\n      }\r\n    ]\r\n  };\r\n\r\n  return {\r\n    case_insensitive: false,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      ATTRIBUTES,\r\n      hljs.HASH_COMMENT_MODE,\r\n      hljs.COMMENT('//', '$'),\r\n      hljs.COMMENT(\r\n        '/\\\\*',\r\n        '\\\\*/',\r\n        { contains: [\r\n          {\r\n            scope: 'doctag',\r\n            match: '@[A-Za-z]+'\r\n          }\r\n        ] }\r\n      ),\r\n      {\r\n        match: /__halt_compiler\\(\\);/,\r\n        keywords: '__halt_compiler',\r\n        starts: {\r\n          scope: \"comment\",\r\n          end: hljs.MATCH_NOTHING_RE,\r\n          contains: [\r\n            {\r\n              match: /\\?>/,\r\n              scope: \"meta\",\r\n              endsParent: true\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      PREPROCESSOR,\r\n      {\r\n        scope: 'variable.language',\r\n        match: /\\$this\\b/\r\n      },\r\n      VARIABLE,\r\n      FUNCTION_INVOKE,\r\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n      {\r\n        match: [\r\n          /const/,\r\n          /\\s/,\r\n          IDENT_RE,\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"variable.constant\",\r\n        },\r\n      },\r\n      CONSTRUCTOR_CALL,\r\n      {\r\n        scope: 'function',\r\n        relevance: 0,\r\n        beginKeywords: 'fn function',\r\n        end: /[;{]/,\r\n        excludeEnd: true,\r\n        illegal: '[$%\\\\[]',\r\n        contains: [\r\n          { beginKeywords: 'use', },\r\n          hljs.UNDERSCORE_TITLE_MODE,\r\n          {\r\n            begin: '=>', // No markup, just a relevance booster\r\n            endsParent: true\r\n          },\r\n          {\r\n            scope: 'params',\r\n            begin: '\\\\(',\r\n            end: '\\\\)',\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            keywords: KEYWORDS,\r\n            contains: [\r\n              'self',\r\n              VARIABLE,\r\n              LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n              hljs.C_BLOCK_COMMENT_MODE,\r\n              STRING,\r\n              NUMBER\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        scope: 'class',\r\n        variants: [\r\n          {\r\n            beginKeywords: \"enum\",\r\n            illegal: /[($\"]/\r\n          },\r\n          {\r\n            beginKeywords: \"class interface trait\",\r\n            illegal: /[:($\"]/\r\n          }\r\n        ],\r\n        relevance: 0,\r\n        end: /\\{/,\r\n        excludeEnd: true,\r\n        contains: [\r\n          { beginKeywords: 'extends implements' },\r\n          hljs.UNDERSCORE_TITLE_MODE\r\n        ]\r\n      },\r\n      // both use and namespace still use \"old style\" rules (vs multi-match)\r\n      // because the namespace name can include `\\` and we still want each\r\n      // element to be treated as its own *individual* title\r\n      {\r\n        beginKeywords: 'namespace',\r\n        relevance: 0,\r\n        end: ';',\r\n        illegal: /[.']/,\r\n        contains: [ hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { scope: \"title.class\" }) ]\r\n      },\r\n      {\r\n        beginKeywords: 'use',\r\n        relevance: 0,\r\n        end: ';',\r\n        contains: [\r\n          // TODO: title.function vs title.class\r\n          {\r\n            match: /\\b(as|const|function)\\b/,\r\n            scope: \"keyword\"\r\n          },\r\n          // TODO: could be title.class or title.function\r\n          hljs.UNDERSCORE_TITLE_MODE\r\n        ]\r\n      },\r\n      STRING,\r\n      NUMBER,\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = php;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}