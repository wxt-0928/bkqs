{"ast":null,"code":"/*\r\nLanguage: XQuery\r\nAuthor: Dirk Kirsten <dk@basex.org>\r\nContributor: Duncan Paterson\r\nDescription: Supports XQuery 3.1 including XQuery Update 3, so also XPath (as it is a superset)\r\nRefactored to process xml constructor syntax and function-bodies. Added missing data-types, xpath operands, inbuilt functions, and query prologs\r\nWebsite: https://www.w3.org/XML/Query/\r\nCategory: functional\r\nAudit: 2020\r\n*/\n\n/** @type LanguageFn */\nfunction xquery(_hljs) {\n  // see https://www.w3.org/TR/xquery/#id-terminal-delimitation\n  const KEYWORDS = [\"module\", \"schema\", \"namespace\", \"boundary-space\", \"preserve\", \"no-preserve\", \"strip\", \"default\", \"collation\", \"base-uri\", \"ordering\", \"context\", \"decimal-format\", \"decimal-separator\", \"copy-namespaces\", \"empty-sequence\", \"except\", \"exponent-separator\", \"external\", \"grouping-separator\", \"inherit\", \"no-inherit\", \"lax\", \"minus-sign\", \"per-mille\", \"percent\", \"schema-attribute\", \"schema-element\", \"strict\", \"unordered\", \"zero-digit\", \"declare\", \"import\", \"option\", \"function\", \"validate\", \"variable\", \"for\", \"at\", \"in\", \"let\", \"where\", \"order\", \"group\", \"by\", \"return\", \"if\", \"then\", \"else\", \"tumbling\", \"sliding\", \"window\", \"start\", \"when\", \"only\", \"end\", \"previous\", \"next\", \"stable\", \"ascending\", \"descending\", \"allowing\", \"empty\", \"greatest\", \"least\", \"some\", \"every\", \"satisfies\", \"switch\", \"case\", \"typeswitch\", \"try\", \"catch\", \"and\", \"or\", \"to\", \"union\", \"intersect\", \"instance\", \"of\", \"treat\", \"as\", \"castable\", \"cast\", \"map\", \"array\", \"delete\", \"insert\", \"into\", \"replace\", \"value\", \"rename\", \"copy\", \"modify\", \"update\"];\n\n  // Node Types (sorted by inheritance)\n  // atomic types (sorted by inheritance)\n  const TYPES = [\"item\", \"document-node\", \"node\", \"attribute\", \"document\", \"element\", \"comment\", \"namespace\", \"namespace-node\", \"processing-instruction\", \"text\", \"construction\", \"xs:anyAtomicType\", \"xs:untypedAtomic\", \"xs:duration\", \"xs:time\", \"xs:decimal\", \"xs:float\", \"xs:double\", \"xs:gYearMonth\", \"xs:gYear\", \"xs:gMonthDay\", \"xs:gMonth\", \"xs:gDay\", \"xs:boolean\", \"xs:base64Binary\", \"xs:hexBinary\", \"xs:anyURI\", \"xs:QName\", \"xs:NOTATION\", \"xs:dateTime\", \"xs:dateTimeStamp\", \"xs:date\", \"xs:string\", \"xs:normalizedString\", \"xs:token\", \"xs:language\", \"xs:NMTOKEN\", \"xs:Name\", \"xs:NCName\", \"xs:ID\", \"xs:IDREF\", \"xs:ENTITY\", \"xs:integer\", \"xs:nonPositiveInteger\", \"xs:negativeInteger\", \"xs:long\", \"xs:int\", \"xs:short\", \"xs:byte\", \"xs:nonNegativeInteger\", \"xs:unisignedLong\", \"xs:unsignedInt\", \"xs:unsignedShort\", \"xs:unsignedByte\", \"xs:positiveInteger\", \"xs:yearMonthDuration\", \"xs:dayTimeDuration\"];\n  const LITERALS = [\"eq\", \"ne\", \"lt\", \"le\", \"gt\", \"ge\", \"is\", \"self::\", \"child::\", \"descendant::\", \"descendant-or-self::\", \"attribute::\", \"following::\", \"following-sibling::\", \"parent::\", \"ancestor::\", \"ancestor-or-self::\", \"preceding::\", \"preceding-sibling::\", \"NaN\"];\n\n  // functions (TODO: find regex for op: without breaking build)\n  const BUILT_IN = {\n    className: 'built_in',\n    variants: [{\n      begin: /\\barray:/,\n      end: /(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\\b/\n    }, {\n      begin: /\\bmap:/,\n      end: /(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\\b/\n    }, {\n      begin: /\\bmath:/,\n      end: /(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\\b/\n    }, {\n      begin: /\\bop:/,\n      end: /\\(/,\n      excludeEnd: true\n    }, {\n      begin: /\\bfn:/,\n      end: /\\(/,\n      excludeEnd: true\n    },\n    // do not highlight inbuilt strings as variable or xml element names\n    {\n      begin: /[^</$:'\"-]\\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\\b/\n    }, {\n      begin: /\\blocal:/,\n      end: /\\(/,\n      excludeEnd: true\n    }, {\n      begin: /\\bzip:/,\n      end: /(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\\b/\n    }, {\n      begin: /\\b(?:util|db|functx|app|xdmp|xmldb):/,\n      end: /\\(/,\n      excludeEnd: true\n    }]\n  };\n  const TITLE = {\n    className: 'title',\n    begin: /\\bxquery version \"[13]\\.[01]\"\\s?(?:encoding \".+\")?/,\n    end: /;/\n  };\n  const VAR = {\n    className: 'variable',\n    begin: /[$][\\w\\-:]+/\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: /(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b/,\n    relevance: 0\n  };\n  const STRING = {\n    className: 'string',\n    variants: [{\n      begin: /\"/,\n      end: /\"/,\n      contains: [{\n        begin: /\"\"/,\n        relevance: 0\n      }]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [{\n        begin: /''/,\n        relevance: 0\n      }]\n    }]\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: /%[\\w\\-:]+/\n  };\n  const COMMENT = {\n    className: 'comment',\n    begin: /\\(:/,\n    end: /:\\)/,\n    relevance: 10,\n    contains: [{\n      className: 'doctag',\n      begin: /@\\w+/\n    }]\n  };\n\n  // see https://www.w3.org/TR/xquery/#id-computedConstructors\n  // mocha: computed_inbuilt\n  // see https://www.regexpal.com/?fam=99749\n  const COMPUTED = {\n    beginKeywords: 'element attribute comment document processing-instruction',\n    end: /\\{/,\n    excludeEnd: true\n  };\n\n  // mocha: direct_method\n  const DIRECT = {\n    begin: /<([\\w._:-]+)(\\s+\\S*=('|\").*('|\"))?>/,\n    end: /(\\/[\\w._:-]+>)/,\n    subLanguage: 'xml',\n    contains: [{\n      begin: /\\{/,\n      end: /\\}/,\n      subLanguage: 'xquery'\n    }, 'self']\n  };\n  const CONTAINS = [VAR, BUILT_IN, STRING, NUMBER, COMMENT, ANNOTATION, TITLE, COMPUTED, DIRECT];\n  return {\n    name: 'XQuery',\n    aliases: ['xpath', 'xq', 'xqm'],\n    case_insensitive: false,\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n    keywords: {\n      $pattern: /[a-zA-Z$][a-zA-Z0-9_:-]*/,\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: LITERALS\n    },\n    contains: CONTAINS\n  };\n}\nmodule.exports = xquery;","map":{"version":3,"names":["xquery","_hljs","KEYWORDS","TYPES","LITERALS","BUILT_IN","className","variants","begin","end","excludeEnd","TITLE","VAR","NUMBER","relevance","STRING","contains","ANNOTATION","COMMENT","COMPUTED","beginKeywords","DIRECT","subLanguage","CONTAINS","name","aliases","case_insensitive","illegal","keywords","$pattern","keyword","type","literal","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/xquery.js"],"sourcesContent":["/*\r\nLanguage: XQuery\r\nAuthor: Dirk Kirsten <dk@basex.org>\r\nContributor: Duncan Paterson\r\nDescription: Supports XQuery 3.1 including XQuery Update 3, so also XPath (as it is a superset)\r\nRefactored to process xml constructor syntax and function-bodies. Added missing data-types, xpath operands, inbuilt functions, and query prologs\r\nWebsite: https://www.w3.org/XML/Query/\r\nCategory: functional\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction xquery(_hljs) {\r\n  // see https://www.w3.org/TR/xquery/#id-terminal-delimitation\r\n  const KEYWORDS = [\r\n    \"module\",\r\n    \"schema\",\r\n    \"namespace\",\r\n    \"boundary-space\",\r\n    \"preserve\",\r\n    \"no-preserve\",\r\n    \"strip\",\r\n    \"default\",\r\n    \"collation\",\r\n    \"base-uri\",\r\n    \"ordering\",\r\n    \"context\",\r\n    \"decimal-format\",\r\n    \"decimal-separator\",\r\n    \"copy-namespaces\",\r\n    \"empty-sequence\",\r\n    \"except\",\r\n    \"exponent-separator\",\r\n    \"external\",\r\n    \"grouping-separator\",\r\n    \"inherit\",\r\n    \"no-inherit\",\r\n    \"lax\",\r\n    \"minus-sign\",\r\n    \"per-mille\",\r\n    \"percent\",\r\n    \"schema-attribute\",\r\n    \"schema-element\",\r\n    \"strict\",\r\n    \"unordered\",\r\n    \"zero-digit\",\r\n    \"declare\",\r\n    \"import\",\r\n    \"option\",\r\n    \"function\",\r\n    \"validate\",\r\n    \"variable\",\r\n    \"for\",\r\n    \"at\",\r\n    \"in\",\r\n    \"let\",\r\n    \"where\",\r\n    \"order\",\r\n    \"group\",\r\n    \"by\",\r\n    \"return\",\r\n    \"if\",\r\n    \"then\",\r\n    \"else\",\r\n    \"tumbling\",\r\n    \"sliding\",\r\n    \"window\",\r\n    \"start\",\r\n    \"when\",\r\n    \"only\",\r\n    \"end\",\r\n    \"previous\",\r\n    \"next\",\r\n    \"stable\",\r\n    \"ascending\",\r\n    \"descending\",\r\n    \"allowing\",\r\n    \"empty\",\r\n    \"greatest\",\r\n    \"least\",\r\n    \"some\",\r\n    \"every\",\r\n    \"satisfies\",\r\n    \"switch\",\r\n    \"case\",\r\n    \"typeswitch\",\r\n    \"try\",\r\n    \"catch\",\r\n    \"and\",\r\n    \"or\",\r\n    \"to\",\r\n    \"union\",\r\n    \"intersect\",\r\n    \"instance\",\r\n    \"of\",\r\n    \"treat\",\r\n    \"as\",\r\n    \"castable\",\r\n    \"cast\",\r\n    \"map\",\r\n    \"array\",\r\n    \"delete\",\r\n    \"insert\",\r\n    \"into\",\r\n    \"replace\",\r\n    \"value\",\r\n    \"rename\",\r\n    \"copy\",\r\n    \"modify\",\r\n    \"update\"\r\n  ];\r\n\r\n  // Node Types (sorted by inheritance)\r\n  // atomic types (sorted by inheritance)\r\n  const TYPES = [\r\n    \"item\",\r\n    \"document-node\",\r\n    \"node\",\r\n    \"attribute\",\r\n    \"document\",\r\n    \"element\",\r\n    \"comment\",\r\n    \"namespace\",\r\n    \"namespace-node\",\r\n    \"processing-instruction\",\r\n    \"text\",\r\n    \"construction\",\r\n    \"xs:anyAtomicType\",\r\n    \"xs:untypedAtomic\",\r\n    \"xs:duration\",\r\n    \"xs:time\",\r\n    \"xs:decimal\",\r\n    \"xs:float\",\r\n    \"xs:double\",\r\n    \"xs:gYearMonth\",\r\n    \"xs:gYear\",\r\n    \"xs:gMonthDay\",\r\n    \"xs:gMonth\",\r\n    \"xs:gDay\",\r\n    \"xs:boolean\",\r\n    \"xs:base64Binary\",\r\n    \"xs:hexBinary\",\r\n    \"xs:anyURI\",\r\n    \"xs:QName\",\r\n    \"xs:NOTATION\",\r\n    \"xs:dateTime\",\r\n    \"xs:dateTimeStamp\",\r\n    \"xs:date\",\r\n    \"xs:string\",\r\n    \"xs:normalizedString\",\r\n    \"xs:token\",\r\n    \"xs:language\",\r\n    \"xs:NMTOKEN\",\r\n    \"xs:Name\",\r\n    \"xs:NCName\",\r\n    \"xs:ID\",\r\n    \"xs:IDREF\",\r\n    \"xs:ENTITY\",\r\n    \"xs:integer\",\r\n    \"xs:nonPositiveInteger\",\r\n    \"xs:negativeInteger\",\r\n    \"xs:long\",\r\n    \"xs:int\",\r\n    \"xs:short\",\r\n    \"xs:byte\",\r\n    \"xs:nonNegativeInteger\",\r\n    \"xs:unisignedLong\",\r\n    \"xs:unsignedInt\",\r\n    \"xs:unsignedShort\",\r\n    \"xs:unsignedByte\",\r\n    \"xs:positiveInteger\",\r\n    \"xs:yearMonthDuration\",\r\n    \"xs:dayTimeDuration\"\r\n  ];\r\n\r\n  const LITERALS = [\r\n    \"eq\",\r\n    \"ne\",\r\n    \"lt\",\r\n    \"le\",\r\n    \"gt\",\r\n    \"ge\",\r\n    \"is\",\r\n    \"self::\",\r\n    \"child::\",\r\n    \"descendant::\",\r\n    \"descendant-or-self::\",\r\n    \"attribute::\",\r\n    \"following::\",\r\n    \"following-sibling::\",\r\n    \"parent::\",\r\n    \"ancestor::\",\r\n    \"ancestor-or-self::\",\r\n    \"preceding::\",\r\n    \"preceding-sibling::\",\r\n    \"NaN\"\r\n  ];\r\n\r\n  // functions (TODO: find regex for op: without breaking build)\r\n  const BUILT_IN = {\r\n    className: 'built_in',\r\n    variants: [\r\n      {\r\n        begin: /\\barray:/,\r\n        end: /(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\\b/\r\n      },\r\n      {\r\n        begin: /\\bmap:/,\r\n        end: /(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\\b/\r\n      },\r\n      {\r\n        begin: /\\bmath:/,\r\n        end: /(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\\b/\r\n      },\r\n      {\r\n        begin: /\\bop:/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        begin: /\\bfn:/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      },\r\n      // do not highlight inbuilt strings as variable or xml element names\r\n      { begin: /[^</$:'\"-]\\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\\b/ },\r\n      {\r\n        begin: /\\blocal:/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        begin: /\\bzip:/,\r\n        end: /(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\\b/\r\n      },\r\n      {\r\n        begin: /\\b(?:util|db|functx|app|xdmp|xmldb):/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      }\r\n    ]\r\n  };\r\n\r\n  const TITLE = {\r\n    className: 'title',\r\n    begin: /\\bxquery version \"[13]\\.[01]\"\\s?(?:encoding \".+\")?/,\r\n    end: /;/\r\n  };\r\n\r\n  const VAR = {\r\n    className: 'variable',\r\n    begin: /[$][\\w\\-:]+/\r\n  };\r\n\r\n  const NUMBER = {\r\n    className: 'number',\r\n    begin: /(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b/,\r\n    relevance: 0\r\n  };\r\n\r\n  const STRING = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: /\"/,\r\n        end: /\"/,\r\n        contains: [\r\n          {\r\n            begin: /\"\"/,\r\n            relevance: 0\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        begin: /'/,\r\n        end: /'/,\r\n        contains: [\r\n          {\r\n            begin: /''/,\r\n            relevance: 0\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const ANNOTATION = {\r\n    className: 'meta',\r\n    begin: /%[\\w\\-:]+/\r\n  };\r\n\r\n  const COMMENT = {\r\n    className: 'comment',\r\n    begin: /\\(:/,\r\n    end: /:\\)/,\r\n    relevance: 10,\r\n    contains: [\r\n      {\r\n        className: 'doctag',\r\n        begin: /@\\w+/\r\n      }\r\n    ]\r\n  };\r\n\r\n  // see https://www.w3.org/TR/xquery/#id-computedConstructors\r\n  // mocha: computed_inbuilt\r\n  // see https://www.regexpal.com/?fam=99749\r\n  const COMPUTED = {\r\n    beginKeywords: 'element attribute comment document processing-instruction',\r\n    end: /\\{/,\r\n    excludeEnd: true\r\n  };\r\n\r\n  // mocha: direct_method\r\n  const DIRECT = {\r\n    begin: /<([\\w._:-]+)(\\s+\\S*=('|\").*('|\"))?>/,\r\n    end: /(\\/[\\w._:-]+>)/,\r\n    subLanguage: 'xml',\r\n    contains: [\r\n      {\r\n        begin: /\\{/,\r\n        end: /\\}/,\r\n        subLanguage: 'xquery'\r\n      },\r\n      'self'\r\n    ]\r\n  };\r\n\r\n  const CONTAINS = [\r\n    VAR,\r\n    BUILT_IN,\r\n    STRING,\r\n    NUMBER,\r\n    COMMENT,\r\n    ANNOTATION,\r\n    TITLE,\r\n    COMPUTED,\r\n    DIRECT\r\n  ];\r\n\r\n  return {\r\n    name: 'XQuery',\r\n    aliases: [\r\n      'xpath',\r\n      'xq',\r\n      'xqm'\r\n    ],\r\n    case_insensitive: false,\r\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\r\n    keywords: {\r\n      $pattern: /[a-zA-Z$][a-zA-Z0-9_:-]*/,\r\n      keyword: KEYWORDS,\r\n      type: TYPES,\r\n      literal: LITERALS\r\n    },\r\n    contains: CONTAINS\r\n  };\r\n}\r\n\r\nmodule.exports = xquery;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}