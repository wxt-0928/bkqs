{"ast":null,"code":"/*\r\nLanguage: TOML, also INI\r\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\r\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\r\nCategory: common, config\r\nWebsite: https://github.com/toml-lang/toml\r\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [{\n      begin: /([+-]+)?[\\d]+_[\\d_]+/\n    }, {\n      begin: hljs.NUMBER_RE\n    }]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [{\n    begin: /;/,\n    end: /$/\n  }, {\n    begin: /#/,\n    end: /$/\n  }];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [{\n      begin: /\\$[\\w\\d\"][\\w\\d_]*/\n    }, {\n      begin: /\\$\\{(.*?)\\}/\n    }]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [{\n      begin: \"'''\",\n      end: \"'''\",\n      relevance: 10\n    }, {\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: \"'\",\n      end: \"'\"\n    }]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [COMMENTS, LITERALS, VARIABLES, STRINGS, NUMBERS, 'self'],\n    relevance: 0\n  };\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE);\n  const DOTTED_KEY = regex.concat(ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*', regex.lookahead(/\\s*=\\s*[^#\\s]/));\n  return {\n    name: 'TOML, also INI',\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [COMMENTS, {\n      className: 'section',\n      begin: /\\[+/,\n      end: /\\]+/\n    }, {\n      begin: DOTTED_KEY,\n      className: 'attr',\n      starts: {\n        end: /$/,\n        contains: [COMMENTS, ARRAY, LITERALS, VARIABLES, STRINGS, NUMBERS]\n      }\n    }]\n  };\n}\nmodule.exports = ini;","map":{"version":3,"names":["ini","hljs","regex","NUMBERS","className","relevance","variants","begin","NUMBER_RE","COMMENTS","COMMENT","end","VARIABLES","LITERALS","STRINGS","contains","BACKSLASH_ESCAPE","ARRAY","BARE_KEY","QUOTED_KEY_DOUBLE_QUOTE","QUOTED_KEY_SINGLE_QUOTE","ANY_KEY","either","DOTTED_KEY","concat","lookahead","name","aliases","case_insensitive","illegal","starts","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/ini.js"],"sourcesContent":["/*\r\nLanguage: TOML, also INI\r\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\r\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\r\nCategory: common, config\r\nWebsite: https://github.com/toml-lang/toml\r\n*/\r\n\r\nfunction ini(hljs) {\r\n  const regex = hljs.regex;\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\r\n      { begin: hljs.NUMBER_RE }\r\n    ]\r\n  };\r\n  const COMMENTS = hljs.COMMENT();\r\n  COMMENTS.variants = [\r\n    {\r\n      begin: /;/,\r\n      end: /$/\r\n    },\r\n    {\r\n      begin: /#/,\r\n      end: /$/\r\n    }\r\n  ];\r\n  const VARIABLES = {\r\n    className: 'variable',\r\n    variants: [\r\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\r\n      { begin: /\\$\\{(.*?)\\}/ }\r\n    ]\r\n  };\r\n  const LITERALS = {\r\n    className: 'literal',\r\n    begin: /\\bon|off|true|false|yes|no\\b/\r\n  };\r\n  const STRINGS = {\r\n    className: \"string\",\r\n    contains: [ hljs.BACKSLASH_ESCAPE ],\r\n    variants: [\r\n      {\r\n        begin: \"'''\",\r\n        end: \"'''\",\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: '\"\"\"',\r\n        end: '\"\"\"',\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: '\"',\r\n        end: '\"'\r\n      },\r\n      {\r\n        begin: \"'\",\r\n        end: \"'\"\r\n      }\r\n    ]\r\n  };\r\n  const ARRAY = {\r\n    begin: /\\[/,\r\n    end: /\\]/,\r\n    contains: [\r\n      COMMENTS,\r\n      LITERALS,\r\n      VARIABLES,\r\n      STRINGS,\r\n      NUMBERS,\r\n      'self'\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\r\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\r\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\r\n  const ANY_KEY = regex.either(\r\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\r\n  );\r\n  const DOTTED_KEY = regex.concat(\r\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\r\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\r\n  );\r\n\r\n  return {\r\n    name: 'TOML, also INI',\r\n    aliases: [ 'toml' ],\r\n    case_insensitive: true,\r\n    illegal: /\\S/,\r\n    contains: [\r\n      COMMENTS,\r\n      {\r\n        className: 'section',\r\n        begin: /\\[+/,\r\n        end: /\\]+/\r\n      },\r\n      {\r\n        begin: DOTTED_KEY,\r\n        className: 'attr',\r\n        starts: {\r\n          end: /$/,\r\n          contains: [\r\n            COMMENTS,\r\n            ARRAY,\r\n            LITERALS,\r\n            VARIABLES,\r\n            STRINGS,\r\n            NUMBERS\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = ini;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAGA,CAACC,IAAI,EAAE;EACjB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACxB,MAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE;IAAuB,CAAC,EACjC;MAAEA,KAAK,EAAEN,IAAI,CAACO;IAAU,CAAC;EAE7B,CAAC;EACD,MAAMC,QAAQ,GAAGR,IAAI,CAACS,OAAO,CAAC,CAAC;EAC/BD,QAAQ,CAACH,QAAQ,GAAG,CAClB;IACEC,KAAK,EAAE,GAAG;IACVI,GAAG,EAAE;EACP,CAAC,EACD;IACEJ,KAAK,EAAE,GAAG;IACVI,GAAG,EAAE;EACP,CAAC,CACF;EACD,MAAMC,SAAS,GAAG;IAChBR,SAAS,EAAE,UAAU;IACrBE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE;IAAoB,CAAC,EAC9B;MAAEA,KAAK,EAAE;IAAc,CAAC;EAE5B,CAAC;EACD,MAAMM,QAAQ,GAAG;IACfT,SAAS,EAAE,SAAS;IACpBG,KAAK,EAAE;EACT,CAAC;EACD,MAAMO,OAAO,GAAG;IACdV,SAAS,EAAE,QAAQ;IACnBW,QAAQ,EAAE,CAAEd,IAAI,CAACe,gBAAgB,CAAE;IACnCV,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,KAAK;MACZI,GAAG,EAAE,KAAK;MACVN,SAAS,EAAE;IACb,CAAC,EACD;MACEE,KAAK,EAAE,KAAK;MACZI,GAAG,EAAE,KAAK;MACVN,SAAS,EAAE;IACb,CAAC,EACD;MACEE,KAAK,EAAE,GAAG;MACVI,GAAG,EAAE;IACP,CAAC,EACD;MACEJ,KAAK,EAAE,GAAG;MACVI,GAAG,EAAE;IACP,CAAC;EAEL,CAAC;EACD,MAAMM,KAAK,GAAG;IACZV,KAAK,EAAE,IAAI;IACXI,GAAG,EAAE,IAAI;IACTI,QAAQ,EAAE,CACRN,QAAQ,EACRI,QAAQ,EACRD,SAAS,EACTE,OAAO,EACPX,OAAO,EACP,MAAM,CACP;IACDE,SAAS,EAAE;EACb,CAAC;EAED,MAAMa,QAAQ,GAAG,gBAAgB;EACjC,MAAMC,uBAAuB,GAAG,eAAe;EAC/C,MAAMC,uBAAuB,GAAG,SAAS;EACzC,MAAMC,OAAO,GAAGnB,KAAK,CAACoB,MAAM,CAC1BJ,QAAQ,EAAEC,uBAAuB,EAAEC,uBACrC,CAAC;EACD,MAAMG,UAAU,GAAGrB,KAAK,CAACsB,MAAM,CAC7BH,OAAO,EAAE,cAAc,EAAEA,OAAO,EAAE,IAAI,EACtCnB,KAAK,CAACuB,SAAS,CAAC,eAAe,CACjC,CAAC;EAED,OAAO;IACLC,IAAI,EAAE,gBAAgB;IACtBC,OAAO,EAAE,CAAE,MAAM,CAAE;IACnBC,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EAAE,IAAI;IACbd,QAAQ,EAAE,CACRN,QAAQ,EACR;MACEL,SAAS,EAAE,SAAS;MACpBG,KAAK,EAAE,KAAK;MACZI,GAAG,EAAE;IACP,CAAC,EACD;MACEJ,KAAK,EAAEgB,UAAU;MACjBnB,SAAS,EAAE,MAAM;MACjB0B,MAAM,EAAE;QACNnB,GAAG,EAAE,GAAG;QACRI,QAAQ,EAAE,CACRN,QAAQ,EACRQ,KAAK,EACLJ,QAAQ,EACRD,SAAS,EACTE,OAAO,EACPX,OAAO;MAEX;IACF,CAAC;EAEL,CAAC;AACH;AAEA4B,MAAM,CAACC,OAAO,GAAGhC,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}