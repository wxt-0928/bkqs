{"ast":null,"code":"/*\r\nLanguage: Monkey\r\nDescription: Monkey2 is an easy to use, cross platform, games oriented programming language from Blitz Research.\r\nAuthor: Arthur Bikmullin <devolonter@gmail.com>\r\nWebsite: https://blitzresearch.itch.io/monkey2\r\nCategory: gaming\r\n*/\n\nfunction monkey(hljs) {\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [{\n      begin: '[$][a-fA-F0-9]+'\n    }, hljs.NUMBER_MODE]\n  };\n  const FUNC_DEFINITION = {\n    variants: [{\n      match: [/(function|method)/, /\\s+/, hljs.UNDERSCORE_IDENT_RE]\n    }],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    }\n  };\n  const CLASS_DEFINITION = {\n    variants: [{\n      match: [/(class|interface|extends|implements)/, /\\s+/, hljs.UNDERSCORE_IDENT_RE]\n    }],\n    scope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  const BUILT_INS = [\"DebugLog\", \"DebugStop\", \"Error\", \"Print\", \"ACos\", \"ACosr\", \"ASin\", \"ASinr\", \"ATan\", \"ATan2\", \"ATan2r\", \"ATanr\", \"Abs\", \"Abs\", \"Ceil\", \"Clamp\", \"Clamp\", \"Cos\", \"Cosr\", \"Exp\", \"Floor\", \"Log\", \"Max\", \"Max\", \"Min\", \"Min\", \"Pow\", \"Sgn\", \"Sgn\", \"Sin\", \"Sinr\", \"Sqrt\", \"Tan\", \"Tanr\", \"Seed\", \"PI\", \"HALFPI\", \"TWOPI\"];\n  const LITERALS = [\"true\", \"false\", \"null\"];\n  const KEYWORDS = [\"public\", \"private\", \"property\", \"continue\", \"exit\", \"extern\", \"new\", \"try\", \"catch\", \"eachin\", \"not\", \"abstract\", \"final\", \"select\", \"case\", \"default\", \"const\", \"local\", \"global\", \"field\", \"end\", \"if\", \"then\", \"else\", \"elseif\", \"endif\", \"while\", \"wend\", \"repeat\", \"until\", \"forever\", \"for\", \"to\", \"step\", \"next\", \"return\", \"module\", \"inline\", \"throw\", \"import\",\n  // not positive, but these are not literals\n  \"and\", \"or\", \"shl\", \"shr\", \"mod\"];\n  return {\n    name: 'Monkey',\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS,\n      built_in: BUILT_INS,\n      literal: LITERALS\n    },\n    illegal: /\\/\\*/,\n    contains: [hljs.COMMENT('#rem', '#end'), hljs.COMMENT(\"'\", '$', {\n      relevance: 0\n    }), FUNC_DEFINITION, CLASS_DEFINITION, {\n      className: 'variable.language',\n      begin: /\\b(self|super)\\b/\n    }, {\n      className: 'meta',\n      begin: /\\s*#/,\n      end: '$',\n      keywords: {\n        keyword: 'if else elseif endif end then'\n      }\n    }, {\n      match: [/^\\s*/, /strict\\b/],\n      scope: {\n        2: \"meta\"\n      }\n    }, {\n      beginKeywords: 'alias',\n      end: '=',\n      contains: [hljs.UNDERSCORE_TITLE_MODE]\n    }, hljs.QUOTE_STRING_MODE, NUMBER]\n  };\n}\nmodule.exports = monkey;","map":{"version":3,"names":["monkey","hljs","NUMBER","className","relevance","variants","begin","NUMBER_MODE","FUNC_DEFINITION","match","UNDERSCORE_IDENT_RE","scope","CLASS_DEFINITION","BUILT_INS","LITERALS","KEYWORDS","name","case_insensitive","keywords","keyword","built_in","literal","illegal","contains","COMMENT","end","beginKeywords","UNDERSCORE_TITLE_MODE","QUOTE_STRING_MODE","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/monkey.js"],"sourcesContent":["/*\r\nLanguage: Monkey\r\nDescription: Monkey2 is an easy to use, cross platform, games oriented programming language from Blitz Research.\r\nAuthor: Arthur Bikmullin <devolonter@gmail.com>\r\nWebsite: https://blitzresearch.itch.io/monkey2\r\nCategory: gaming\r\n*/\r\n\r\nfunction monkey(hljs) {\r\n  const NUMBER = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      { begin: '[$][a-fA-F0-9]+' },\r\n      hljs.NUMBER_MODE\r\n    ]\r\n  };\r\n  const FUNC_DEFINITION = {\r\n    variants: [\r\n      { match: [\r\n        /(function|method)/,\r\n        /\\s+/,\r\n        hljs.UNDERSCORE_IDENT_RE,\r\n      ] },\r\n    ],\r\n    scope: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    }\r\n  };\r\n  const CLASS_DEFINITION = {\r\n    variants: [\r\n      { match: [\r\n        /(class|interface|extends|implements)/,\r\n        /\\s+/,\r\n        hljs.UNDERSCORE_IDENT_RE,\r\n      ] },\r\n    ],\r\n    scope: {\r\n      1: \"keyword\",\r\n      3: \"title.class\"\r\n    }\r\n  };\r\n  const BUILT_INS = [\r\n    \"DebugLog\",\r\n    \"DebugStop\",\r\n    \"Error\",\r\n    \"Print\",\r\n    \"ACos\",\r\n    \"ACosr\",\r\n    \"ASin\",\r\n    \"ASinr\",\r\n    \"ATan\",\r\n    \"ATan2\",\r\n    \"ATan2r\",\r\n    \"ATanr\",\r\n    \"Abs\",\r\n    \"Abs\",\r\n    \"Ceil\",\r\n    \"Clamp\",\r\n    \"Clamp\",\r\n    \"Cos\",\r\n    \"Cosr\",\r\n    \"Exp\",\r\n    \"Floor\",\r\n    \"Log\",\r\n    \"Max\",\r\n    \"Max\",\r\n    \"Min\",\r\n    \"Min\",\r\n    \"Pow\",\r\n    \"Sgn\",\r\n    \"Sgn\",\r\n    \"Sin\",\r\n    \"Sinr\",\r\n    \"Sqrt\",\r\n    \"Tan\",\r\n    \"Tanr\",\r\n    \"Seed\",\r\n    \"PI\",\r\n    \"HALFPI\",\r\n    \"TWOPI\"\r\n  ];\r\n  const LITERALS = [\r\n    \"true\",\r\n    \"false\",\r\n    \"null\"\r\n  ];\r\n  const KEYWORDS = [\r\n    \"public\",\r\n    \"private\",\r\n    \"property\",\r\n    \"continue\",\r\n    \"exit\",\r\n    \"extern\",\r\n    \"new\",\r\n    \"try\",\r\n    \"catch\",\r\n    \"eachin\",\r\n    \"not\",\r\n    \"abstract\",\r\n    \"final\",\r\n    \"select\",\r\n    \"case\",\r\n    \"default\",\r\n    \"const\",\r\n    \"local\",\r\n    \"global\",\r\n    \"field\",\r\n    \"end\",\r\n    \"if\",\r\n    \"then\",\r\n    \"else\",\r\n    \"elseif\",\r\n    \"endif\",\r\n    \"while\",\r\n    \"wend\",\r\n    \"repeat\",\r\n    \"until\",\r\n    \"forever\",\r\n    \"for\",\r\n    \"to\",\r\n    \"step\",\r\n    \"next\",\r\n    \"return\",\r\n    \"module\",\r\n    \"inline\",\r\n    \"throw\",\r\n    \"import\",\r\n    // not positive, but these are not literals\r\n    \"and\",\r\n    \"or\",\r\n    \"shl\",\r\n    \"shr\",\r\n    \"mod\"\r\n  ];\r\n\r\n  return {\r\n    name: 'Monkey',\r\n    case_insensitive: true,\r\n    keywords: {\r\n      keyword: KEYWORDS,\r\n      built_in: BUILT_INS,\r\n      literal: LITERALS\r\n    },\r\n    illegal: /\\/\\*/,\r\n    contains: [\r\n      hljs.COMMENT('#rem', '#end'),\r\n      hljs.COMMENT(\r\n        \"'\",\r\n        '$',\r\n        { relevance: 0 }\r\n      ),\r\n      FUNC_DEFINITION,\r\n      CLASS_DEFINITION,\r\n      {\r\n        className: 'variable.language',\r\n        begin: /\\b(self|super)\\b/\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: /\\s*#/,\r\n        end: '$',\r\n        keywords: { keyword: 'if else elseif endif end then' }\r\n      },\r\n      {\r\n        match: [\r\n          /^\\s*/,\r\n          /strict\\b/\r\n        ],\r\n        scope: { 2: \"meta\" }\r\n      },\r\n      {\r\n        beginKeywords: 'alias',\r\n        end: '=',\r\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\r\n      },\r\n      hljs.QUOTE_STRING_MODE,\r\n      NUMBER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = monkey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}