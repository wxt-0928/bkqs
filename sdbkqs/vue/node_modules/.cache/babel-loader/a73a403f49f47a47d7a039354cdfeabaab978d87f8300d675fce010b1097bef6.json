{"ast":null,"code":"/*\r\nLanguage: Lisp\r\nDescription: Generic lisp syntax\r\nAuthor: Vasily Polovnyov <vast@whiteants.net>\r\nCategory: lisp\r\n*/\n\nfunction lisp(hljs) {\n  const LISP_IDENT_RE = '[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*';\n  const MEC_RE = '\\\\|[^]*?\\\\|';\n  const LISP_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?';\n  const LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [{\n      begin: LISP_SIMPLE_NUMBER_RE,\n      relevance: 0\n    }, {\n      begin: '#(b|B)[0-1]+(/[0-1]+)?'\n    }, {\n      begin: '#(o|O)[0-7]+(/[0-7]+)?'\n    }, {\n      begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'\n    }, {\n      begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\n      end: '\\\\)'\n    }]\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  });\n  const COMMENT = hljs.COMMENT(';', '$', {\n    relevance: 0\n  });\n  const VARIABLE = {\n    begin: '\\\\*',\n    end: '\\\\*'\n  };\n  const KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  const IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  const MEC = {\n    begin: MEC_RE\n  };\n  const QUOTED_LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  const QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [{\n      begin: '[\\'`]\\\\(',\n      end: '\\\\)'\n    }, {\n      begin: '\\\\(quote ',\n      end: '\\\\)',\n      keywords: {\n        name: 'quote'\n      }\n    }, {\n      begin: '\\'' + MEC_RE\n    }]\n  };\n  const QUOTED_ATOM = {\n    variants: [{\n      begin: '\\'' + LISP_IDENT_RE\n    }, {\n      begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'\n    }]\n  };\n  const LIST = {\n    begin: '\\\\(\\\\s*',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [{\n    className: 'name',\n    variants: [{\n      begin: LISP_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: MEC_RE\n    }]\n  }, BODY];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n  return {\n    name: 'Lisp',\n    illegal: /\\S/,\n    contains: [NUMBER, hljs.SHEBANG(), LITERAL, STRING, COMMENT, QUOTED, QUOTED_ATOM, LIST, IDENT]\n  };\n}\nmodule.exports = lisp;","map":{"version":3,"names":["lisp","hljs","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","LITERAL","className","begin","NUMBER","variants","relevance","end","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","VARIABLE","KEYWORD","IDENT","MEC","QUOTED_LIST","contains","QUOTED","keywords","name","QUOTED_ATOM","LIST","BODY","endsWithParent","SHEBANG","module","exports"],"sources":["D:/软件工程/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/lisp.js"],"sourcesContent":["/*\r\nLanguage: Lisp\r\nDescription: Generic lisp syntax\r\nAuthor: Vasily Polovnyov <vast@whiteants.net>\r\nCategory: lisp\r\n*/\r\n\r\nfunction lisp(hljs) {\r\n  const LISP_IDENT_RE = '[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*';\r\n  const MEC_RE = '\\\\|[^]*?\\\\|';\r\n  const LISP_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?';\r\n  const LITERAL = {\r\n    className: 'literal',\r\n    begin: '\\\\b(t{1}|nil)\\\\b'\r\n  };\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      {\r\n        begin: LISP_SIMPLE_NUMBER_RE,\r\n        relevance: 0\r\n      },\r\n      { begin: '#(b|B)[0-1]+(/[0-1]+)?' },\r\n      { begin: '#(o|O)[0-7]+(/[0-7]+)?' },\r\n      { begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?' },\r\n      {\r\n        begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\r\n        end: '\\\\)'\r\n      }\r\n    ]\r\n  };\r\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\r\n  const COMMENT = hljs.COMMENT(\r\n    ';', '$',\r\n    { relevance: 0 }\r\n  );\r\n  const VARIABLE = {\r\n    begin: '\\\\*',\r\n    end: '\\\\*'\r\n  };\r\n  const KEYWORD = {\r\n    className: 'symbol',\r\n    begin: '[:&]' + LISP_IDENT_RE\r\n  };\r\n  const IDENT = {\r\n    begin: LISP_IDENT_RE,\r\n    relevance: 0\r\n  };\r\n  const MEC = { begin: MEC_RE };\r\n  const QUOTED_LIST = {\r\n    begin: '\\\\(',\r\n    end: '\\\\)',\r\n    contains: [\r\n      'self',\r\n      LITERAL,\r\n      STRING,\r\n      NUMBER,\r\n      IDENT\r\n    ]\r\n  };\r\n  const QUOTED = {\r\n    contains: [\r\n      NUMBER,\r\n      STRING,\r\n      VARIABLE,\r\n      KEYWORD,\r\n      QUOTED_LIST,\r\n      IDENT\r\n    ],\r\n    variants: [\r\n      {\r\n        begin: '[\\'`]\\\\(',\r\n        end: '\\\\)'\r\n      },\r\n      {\r\n        begin: '\\\\(quote ',\r\n        end: '\\\\)',\r\n        keywords: { name: 'quote' }\r\n      },\r\n      { begin: '\\'' + MEC_RE }\r\n    ]\r\n  };\r\n  const QUOTED_ATOM = { variants: [\r\n    { begin: '\\'' + LISP_IDENT_RE },\r\n    { begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*' }\r\n  ] };\r\n  const LIST = {\r\n    begin: '\\\\(\\\\s*',\r\n    end: '\\\\)'\r\n  };\r\n  const BODY = {\r\n    endsWithParent: true,\r\n    relevance: 0\r\n  };\r\n  LIST.contains = [\r\n    {\r\n      className: 'name',\r\n      variants: [\r\n        {\r\n          begin: LISP_IDENT_RE,\r\n          relevance: 0,\r\n        },\r\n        { begin: MEC_RE }\r\n      ]\r\n    },\r\n    BODY\r\n  ];\r\n  BODY.contains = [\r\n    QUOTED,\r\n    QUOTED_ATOM,\r\n    LIST,\r\n    LITERAL,\r\n    NUMBER,\r\n    STRING,\r\n    COMMENT,\r\n    VARIABLE,\r\n    KEYWORD,\r\n    MEC,\r\n    IDENT\r\n  ];\r\n\r\n  return {\r\n    name: 'Lisp',\r\n    illegal: /\\S/,\r\n    contains: [\r\n      NUMBER,\r\n      hljs.SHEBANG(),\r\n      LITERAL,\r\n      STRING,\r\n      COMMENT,\r\n      QUOTED,\r\n      QUOTED_ATOM,\r\n      LIST,\r\n      IDENT\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = lisp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}