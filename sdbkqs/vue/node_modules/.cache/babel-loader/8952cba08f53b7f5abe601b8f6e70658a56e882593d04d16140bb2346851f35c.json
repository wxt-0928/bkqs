{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\r\nLanguage: WebAssembly\r\nWebsite: https://webassembly.org\r\nDescription:  Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.\r\nCategory: web, common\r\nAudit: 2020\r\n*/\n\n/** @type LanguageFn */\nfunction wasm(hljs) {\n  hljs.regex;\n  const BLOCK_COMMENT = hljs.COMMENT(/\\(;/, /;\\)/);\n  BLOCK_COMMENT.contains.push(\"self\");\n  const LINE_COMMENT = hljs.COMMENT(/;;/, /$/);\n  const KWS = [\"anyfunc\", \"block\", \"br\", \"br_if\", \"br_table\", \"call\", \"call_indirect\", \"data\", \"drop\", \"elem\", \"else\", \"end\", \"export\", \"func\", \"global.get\", \"global.set\", \"local.get\", \"local.set\", \"local.tee\", \"get_global\", \"get_local\", \"global\", \"if\", \"import\", \"local\", \"loop\", \"memory\", \"memory.grow\", \"memory.size\", \"module\", \"mut\", \"nop\", \"offset\", \"param\", \"result\", \"return\", \"select\", \"set_global\", \"set_local\", \"start\", \"table\", \"tee_local\", \"then\", \"type\", \"unreachable\"];\n  const FUNCTION_REFERENCE = {\n    begin: [/(?:func|call|call_indirect)/, /\\s+/, /\\$[^\\s)]+/],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    }\n  };\n  const ARGUMENT = {\n    className: \"variable\",\n    begin: /\\$[\\w_]+/\n  };\n  const PARENS = {\n    match: /(\\((?!;)|\\))+/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  const NUMBER = {\n    className: \"number\",\n    relevance: 0,\n    // borrowed from Prism, TODO: split out into variants\n    match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n  };\n  const TYPE = {\n    // look-ahead prevents us from gobbling up opcodes\n    match: /(i32|i64|f32|f64)(?!\\.)/,\n    className: \"type\"\n  };\n  const MATH_OPERATIONS = {\n    className: \"keyword\",\n    // borrowed from Prism, TODO: split out into variants\n    match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n  };\n  const OFFSET_ALIGN = {\n    match: [/(?:offset|align)/, /\\s*/, /=/],\n    className: {\n      1: \"keyword\",\n      3: \"operator\"\n    }\n  };\n  return {\n    name: 'WebAssembly',\n    keywords: {\n      $pattern: /[\\w.]+/,\n      keyword: KWS\n    },\n    contains: [LINE_COMMENT, BLOCK_COMMENT, OFFSET_ALIGN, ARGUMENT, PARENS, FUNCTION_REFERENCE, hljs.QUOTE_STRING_MODE, TYPE, MATH_OPERATIONS, NUMBER]\n  };\n}\nmodule.exports = wasm;","map":{"version":3,"names":["wasm","hljs","regex","BLOCK_COMMENT","COMMENT","contains","push","LINE_COMMENT","KWS","FUNCTION_REFERENCE","begin","className","ARGUMENT","PARENS","match","relevance","NUMBER","TYPE","MATH_OPERATIONS","OFFSET_ALIGN","name","keywords","$pattern","keyword","QUOTE_STRING_MODE","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/wasm.js"],"sourcesContent":["/*\r\nLanguage: WebAssembly\r\nWebsite: https://webassembly.org\r\nDescription:  Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.\r\nCategory: web, common\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction wasm(hljs) {\r\n  hljs.regex;\r\n  const BLOCK_COMMENT = hljs.COMMENT(/\\(;/, /;\\)/);\r\n  BLOCK_COMMENT.contains.push(\"self\");\r\n  const LINE_COMMENT = hljs.COMMENT(/;;/, /$/);\r\n\r\n  const KWS = [\r\n    \"anyfunc\",\r\n    \"block\",\r\n    \"br\",\r\n    \"br_if\",\r\n    \"br_table\",\r\n    \"call\",\r\n    \"call_indirect\",\r\n    \"data\",\r\n    \"drop\",\r\n    \"elem\",\r\n    \"else\",\r\n    \"end\",\r\n    \"export\",\r\n    \"func\",\r\n    \"global.get\",\r\n    \"global.set\",\r\n    \"local.get\",\r\n    \"local.set\",\r\n    \"local.tee\",\r\n    \"get_global\",\r\n    \"get_local\",\r\n    \"global\",\r\n    \"if\",\r\n    \"import\",\r\n    \"local\",\r\n    \"loop\",\r\n    \"memory\",\r\n    \"memory.grow\",\r\n    \"memory.size\",\r\n    \"module\",\r\n    \"mut\",\r\n    \"nop\",\r\n    \"offset\",\r\n    \"param\",\r\n    \"result\",\r\n    \"return\",\r\n    \"select\",\r\n    \"set_global\",\r\n    \"set_local\",\r\n    \"start\",\r\n    \"table\",\r\n    \"tee_local\",\r\n    \"then\",\r\n    \"type\",\r\n    \"unreachable\"\r\n  ];\r\n\r\n  const FUNCTION_REFERENCE = {\r\n    begin: [\r\n      /(?:func|call|call_indirect)/,\r\n      /\\s+/,\r\n      /\\$[^\\s)]+/\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    }\r\n  };\r\n\r\n  const ARGUMENT = {\r\n    className: \"variable\",\r\n    begin: /\\$[\\w_]+/\r\n  };\r\n\r\n  const PARENS = {\r\n    match: /(\\((?!;)|\\))+/,\r\n    className: \"punctuation\",\r\n    relevance: 0\r\n  };\r\n\r\n  const NUMBER = {\r\n    className: \"number\",\r\n    relevance: 0,\r\n    // borrowed from Prism, TODO: split out into variants\r\n    match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\r\n  };\r\n\r\n  const TYPE = {\r\n    // look-ahead prevents us from gobbling up opcodes\r\n    match: /(i32|i64|f32|f64)(?!\\.)/,\r\n    className: \"type\"\r\n  };\r\n\r\n  const MATH_OPERATIONS = {\r\n    className: \"keyword\",\r\n    // borrowed from Prism, TODO: split out into variants\r\n    match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\r\n  };\r\n\r\n  const OFFSET_ALIGN = {\r\n    match: [\r\n      /(?:offset|align)/,\r\n      /\\s*/,\r\n      /=/\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"operator\"\r\n    }\r\n  };\r\n\r\n  return {\r\n    name: 'WebAssembly',\r\n    keywords: {\r\n      $pattern: /[\\w.]+/,\r\n      keyword: KWS\r\n    },\r\n    contains: [\r\n      LINE_COMMENT,\r\n      BLOCK_COMMENT,\r\n      OFFSET_ALIGN,\r\n      ARGUMENT,\r\n      PARENS,\r\n      FUNCTION_REFERENCE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      TYPE,\r\n      MATH_OPERATIONS,\r\n      NUMBER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = wasm;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,IAAIA,CAACC,IAAI,EAAE;EAClBA,IAAI,CAACC,KAAK;EACV,MAAMC,aAAa,GAAGF,IAAI,CAACG,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;EAChDD,aAAa,CAACE,QAAQ,CAACC,IAAI,CAAC,MAAM,CAAC;EACnC,MAAMC,YAAY,GAAGN,IAAI,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAE5C,MAAMI,GAAG,GAAG,CACV,SAAS,EACT,OAAO,EACP,IAAI,EACJ,OAAO,EACP,UAAU,EACV,MAAM,EACN,eAAe,EACf,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,KAAK,EACL,QAAQ,EACR,MAAM,EACN,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,WAAW,EACX,WAAW,EACX,YAAY,EACZ,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,QAAQ,EACR,OAAO,EACP,MAAM,EACN,QAAQ,EACR,aAAa,EACb,aAAa,EACb,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,WAAW,EACX,OAAO,EACP,OAAO,EACP,WAAW,EACX,MAAM,EACN,MAAM,EACN,aAAa,CACd;EAED,MAAMC,kBAAkB,GAAG;IACzBC,KAAK,EAAE,CACL,6BAA6B,EAC7B,KAAK,EACL,WAAW,CACZ;IACDC,SAAS,EAAE;MACT,CAAC,EAAE,SAAS;MACZ,CAAC,EAAE;IACL;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG;IACfD,SAAS,EAAE,UAAU;IACrBD,KAAK,EAAE;EACT,CAAC;EAED,MAAMG,MAAM,GAAG;IACbC,KAAK,EAAE,eAAe;IACtBH,SAAS,EAAE,aAAa;IACxBI,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,MAAM,GAAG;IACbL,SAAS,EAAE,QAAQ;IACnBI,SAAS,EAAE,CAAC;IACZ;IACAD,KAAK,EAAE;EACT,CAAC;EAED,MAAMG,IAAI,GAAG;IACX;IACAH,KAAK,EAAE,yBAAyB;IAChCH,SAAS,EAAE;EACb,CAAC;EAED,MAAMO,eAAe,GAAG;IACtBP,SAAS,EAAE,SAAS;IACpB;IACAG,KAAK,EAAE;EACT,CAAC;EAED,MAAMK,YAAY,GAAG;IACnBL,KAAK,EAAE,CACL,kBAAkB,EAClB,KAAK,EACL,GAAG,CACJ;IACDH,SAAS,EAAE;MACT,CAAC,EAAE,SAAS;MACZ,CAAC,EAAE;IACL;EACF,CAAC;EAED,OAAO;IACLS,IAAI,EAAE,aAAa;IACnBC,QAAQ,EAAE;MACRC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAEf;IACX,CAAC;IACDH,QAAQ,EAAE,CACRE,YAAY,EACZJ,aAAa,EACbgB,YAAY,EACZP,QAAQ,EACRC,MAAM,EACNJ,kBAAkB,EAClBR,IAAI,CAACuB,iBAAiB,EACtBP,IAAI,EACJC,eAAe,EACfF,MAAM;EAEV,CAAC;AACH;AAEAS,MAAM,CAACC,OAAO,GAAG1B,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}