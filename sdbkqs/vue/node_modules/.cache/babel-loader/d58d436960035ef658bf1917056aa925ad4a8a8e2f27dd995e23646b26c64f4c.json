{"ast":null,"code":"/*\r\nLanguage: Thrift\r\nAuthor: Oleg Efimov <efimovov@gmail.com>\r\nDescription: Thrift message definition format\r\nWebsite: https://thrift.apache.org\r\nCategory: protocols\r\n*/\n\nfunction thrift(hljs) {\n  const TYPES = [\"bool\", \"byte\", \"i16\", \"i32\", \"i64\", \"double\", \"string\", \"binary\"];\n  const KEYWORDS = [\"namespace\", \"const\", \"typedef\", \"struct\", \"enum\", \"service\", \"exception\", \"void\", \"oneway\", \"set\", \"list\", \"map\", \"required\", \"optional\"];\n  return {\n    name: 'Thrift',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: 'true false'\n    },\n    contains: [hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'class',\n      beginKeywords: 'struct enum service exception',\n      end: /\\{/,\n      illegal: /\\n/,\n      contains: [hljs.inherit(hljs.TITLE_MODE, {\n        // hack: eating everything after the first title\n        starts: {\n          endsWithParent: true,\n          excludeEnd: true\n        }\n      })]\n    }, {\n      begin: '\\\\b(set|list|map)\\\\s*<',\n      keywords: {\n        type: [...TYPES, \"set\", \"list\", \"map\"]\n      },\n      end: '>',\n      contains: ['self']\n    }]\n  };\n}\nmodule.exports = thrift;","map":{"version":3,"names":["thrift","hljs","TYPES","KEYWORDS","name","keywords","keyword","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","beginKeywords","end","illegal","inherit","TITLE_MODE","starts","endsWithParent","excludeEnd","begin","module","exports"],"sources":["D:/sdbkqs/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/thrift.js"],"sourcesContent":["/*\r\nLanguage: Thrift\r\nAuthor: Oleg Efimov <efimovov@gmail.com>\r\nDescription: Thrift message definition format\r\nWebsite: https://thrift.apache.org\r\nCategory: protocols\r\n*/\r\n\r\nfunction thrift(hljs) {\r\n  const TYPES = [\r\n    \"bool\",\r\n    \"byte\",\r\n    \"i16\",\r\n    \"i32\",\r\n    \"i64\",\r\n    \"double\",\r\n    \"string\",\r\n    \"binary\"\r\n  ];\r\n  const KEYWORDS = [\r\n    \"namespace\",\r\n    \"const\",\r\n    \"typedef\",\r\n    \"struct\",\r\n    \"enum\",\r\n    \"service\",\r\n    \"exception\",\r\n    \"void\",\r\n    \"oneway\",\r\n    \"set\",\r\n    \"list\",\r\n    \"map\",\r\n    \"required\",\r\n    \"optional\"\r\n  ];\r\n  return {\r\n    name: 'Thrift',\r\n    keywords: {\r\n      keyword: KEYWORDS,\r\n      type: TYPES,\r\n      literal: 'true false'\r\n    },\r\n    contains: [\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.NUMBER_MODE,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'struct enum service exception',\r\n        end: /\\{/,\r\n        illegal: /\\n/,\r\n        contains: [\r\n          hljs.inherit(hljs.TITLE_MODE, {\r\n            // hack: eating everything after the first title\r\n            starts: {\r\n              endsWithParent: true,\r\n              excludeEnd: true\r\n            } })\r\n        ]\r\n      },\r\n      {\r\n        begin: '\\\\b(set|list|map)\\\\s*<',\r\n        keywords: { type: [\r\n          ...TYPES,\r\n          \"set\",\r\n          \"list\",\r\n          \"map\"\r\n        ] },\r\n        end: '>',\r\n        contains: [ 'self' ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = thrift;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAMA,CAACC,IAAI,EAAE;EACpB,MAAMC,KAAK,GAAG,CACZ,MAAM,EACN,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,QAAQ,CACT;EACD,MAAMC,QAAQ,GAAG,CACf,WAAW,EACX,OAAO,EACP,SAAS,EACT,QAAQ,EACR,MAAM,EACN,SAAS,EACT,WAAW,EACX,MAAM,EACN,QAAQ,EACR,KAAK,EACL,MAAM,EACN,KAAK,EACL,UAAU,EACV,UAAU,CACX;EACD,OAAO;IACLC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;MACRC,OAAO,EAAEH,QAAQ;MACjBI,IAAI,EAAEL,KAAK;MACXM,OAAO,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE,CACRR,IAAI,CAACS,iBAAiB,EACtBT,IAAI,CAACU,WAAW,EAChBV,IAAI,CAACW,mBAAmB,EACxBX,IAAI,CAACY,oBAAoB,EACzB;MACEC,SAAS,EAAE,OAAO;MAClBC,aAAa,EAAE,+BAA+B;MAC9CC,GAAG,EAAE,IAAI;MACTC,OAAO,EAAE,IAAI;MACbR,QAAQ,EAAE,CACRR,IAAI,CAACiB,OAAO,CAACjB,IAAI,CAACkB,UAAU,EAAE;QAC5B;QACAC,MAAM,EAAE;UACNC,cAAc,EAAE,IAAI;UACpBC,UAAU,EAAE;QACd;MAAE,CAAC,CAAC;IAEV,CAAC,EACD;MACEC,KAAK,EAAE,wBAAwB;MAC/BlB,QAAQ,EAAE;QAAEE,IAAI,EAAE,CAChB,GAAGL,KAAK,EACR,KAAK,EACL,MAAM,EACN,KAAK;MACL,CAAC;MACHc,GAAG,EAAE,GAAG;MACRP,QAAQ,EAAE,CAAE,MAAM;IACpB,CAAC;EAEL,CAAC;AACH;AAEAe,MAAM,CAACC,OAAO,GAAGzB,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}