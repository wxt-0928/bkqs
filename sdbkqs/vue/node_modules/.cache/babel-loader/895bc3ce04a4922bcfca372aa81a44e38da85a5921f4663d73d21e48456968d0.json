{"ast":null,"code":"/*\r\nLanguage: Tcl\r\nDescription: Tcl is a very simple programming language.\r\nAuthor: Radek Liska <radekliska@gmail.com>\r\nWebsite: https://www.tcl.tk/about/language.html\r\nCategory: scripting\r\n*/\n\nfunction tcl(hljs) {\n  const regex = hljs.regex;\n  const TCL_IDENT = /[a-zA-Z_][a-zA-Z0-9_]*/;\n  const NUMBER = {\n    className: 'number',\n    variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n  };\n  const KEYWORDS = [\"after\", \"append\", \"apply\", \"array\", \"auto_execok\", \"auto_import\", \"auto_load\", \"auto_mkindex\", \"auto_mkindex_old\", \"auto_qualify\", \"auto_reset\", \"bgerror\", \"binary\", \"break\", \"catch\", \"cd\", \"chan\", \"clock\", \"close\", \"concat\", \"continue\", \"dde\", \"dict\", \"encoding\", \"eof\", \"error\", \"eval\", \"exec\", \"exit\", \"expr\", \"fblocked\", \"fconfigure\", \"fcopy\", \"file\", \"fileevent\", \"filename\", \"flush\", \"for\", \"foreach\", \"format\", \"gets\", \"glob\", \"global\", \"history\", \"http\", \"if\", \"incr\", \"info\", \"interp\", \"join\", \"lappend|10\", \"lassign|10\", \"lindex|10\", \"linsert|10\", \"list\", \"llength|10\", \"load\", \"lrange|10\", \"lrepeat|10\", \"lreplace|10\", \"lreverse|10\", \"lsearch|10\", \"lset|10\", \"lsort|10\", \"mathfunc\", \"mathop\", \"memory\", \"msgcat\", \"namespace\", \"open\", \"package\", \"parray\", \"pid\", \"pkg::create\", \"pkg_mkIndex\", \"platform\", \"platform::shell\", \"proc\", \"puts\", \"pwd\", \"read\", \"refchan\", \"regexp\", \"registry\", \"regsub|10\", \"rename\", \"return\", \"safe\", \"scan\", \"seek\", \"set\", \"socket\", \"source\", \"split\", \"string\", \"subst\", \"switch\", \"tcl_endOfWord\", \"tcl_findLibrary\", \"tcl_startOfNextWord\", \"tcl_startOfPreviousWord\", \"tcl_wordBreakAfter\", \"tcl_wordBreakBefore\", \"tcltest\", \"tclvars\", \"tell\", \"time\", \"tm\", \"trace\", \"unknown\", \"unload\", \"unset\", \"update\", \"uplevel\", \"upvar\", \"variable\", \"vwait\", \"while\"];\n  return {\n    name: 'Tcl',\n    aliases: ['tk'],\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT(';[ \\\\t]*#', '$'), hljs.COMMENT('^[ \\\\t]*#', '$'), {\n      beginKeywords: 'proc',\n      end: '[\\\\{]',\n      excludeEnd: true,\n      contains: [{\n        className: 'title',\n        begin: '[ \\\\t\\\\n\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n        end: '[ \\\\t\\\\n\\\\r]',\n        endsWithParent: true,\n        excludeEnd: true\n      }]\n    }, {\n      className: \"variable\",\n      variants: [{\n        begin: regex.concat(/\\$/, regex.optional(/::/), TCL_IDENT, '(::', TCL_IDENT, ')*')\n      }, {\n        begin: '\\\\$\\\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n        end: '\\\\}',\n        contains: [NUMBER]\n      }]\n    }, {\n      className: 'string',\n      contains: [hljs.BACKSLASH_ESCAPE],\n      variants: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null\n      })]\n    }, NUMBER]\n  };\n}\nmodule.exports = tcl;","map":{"version":3,"names":["tcl","hljs","regex","TCL_IDENT","NUMBER","className","variants","BINARY_NUMBER_MODE","C_NUMBER_MODE","KEYWORDS","name","aliases","keywords","contains","COMMENT","beginKeywords","end","excludeEnd","begin","endsWithParent","concat","optional","BACKSLASH_ESCAPE","inherit","QUOTE_STRING_MODE","illegal","module","exports"],"sources":["D:/软件工程/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/tcl.js"],"sourcesContent":["/*\r\nLanguage: Tcl\r\nDescription: Tcl is a very simple programming language.\r\nAuthor: Radek Liska <radekliska@gmail.com>\r\nWebsite: https://www.tcl.tk/about/language.html\r\nCategory: scripting\r\n*/\r\n\r\nfunction tcl(hljs) {\r\n  const regex = hljs.regex;\r\n  const TCL_IDENT = /[a-zA-Z_][a-zA-Z0-9_]*/;\r\n\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      hljs.BINARY_NUMBER_MODE,\r\n      hljs.C_NUMBER_MODE\r\n    ]\r\n  };\r\n\r\n  const KEYWORDS = [\r\n    \"after\",\r\n    \"append\",\r\n    \"apply\",\r\n    \"array\",\r\n    \"auto_execok\",\r\n    \"auto_import\",\r\n    \"auto_load\",\r\n    \"auto_mkindex\",\r\n    \"auto_mkindex_old\",\r\n    \"auto_qualify\",\r\n    \"auto_reset\",\r\n    \"bgerror\",\r\n    \"binary\",\r\n    \"break\",\r\n    \"catch\",\r\n    \"cd\",\r\n    \"chan\",\r\n    \"clock\",\r\n    \"close\",\r\n    \"concat\",\r\n    \"continue\",\r\n    \"dde\",\r\n    \"dict\",\r\n    \"encoding\",\r\n    \"eof\",\r\n    \"error\",\r\n    \"eval\",\r\n    \"exec\",\r\n    \"exit\",\r\n    \"expr\",\r\n    \"fblocked\",\r\n    \"fconfigure\",\r\n    \"fcopy\",\r\n    \"file\",\r\n    \"fileevent\",\r\n    \"filename\",\r\n    \"flush\",\r\n    \"for\",\r\n    \"foreach\",\r\n    \"format\",\r\n    \"gets\",\r\n    \"glob\",\r\n    \"global\",\r\n    \"history\",\r\n    \"http\",\r\n    \"if\",\r\n    \"incr\",\r\n    \"info\",\r\n    \"interp\",\r\n    \"join\",\r\n    \"lappend|10\",\r\n    \"lassign|10\",\r\n    \"lindex|10\",\r\n    \"linsert|10\",\r\n    \"list\",\r\n    \"llength|10\",\r\n    \"load\",\r\n    \"lrange|10\",\r\n    \"lrepeat|10\",\r\n    \"lreplace|10\",\r\n    \"lreverse|10\",\r\n    \"lsearch|10\",\r\n    \"lset|10\",\r\n    \"lsort|10\",\r\n    \"mathfunc\",\r\n    \"mathop\",\r\n    \"memory\",\r\n    \"msgcat\",\r\n    \"namespace\",\r\n    \"open\",\r\n    \"package\",\r\n    \"parray\",\r\n    \"pid\",\r\n    \"pkg::create\",\r\n    \"pkg_mkIndex\",\r\n    \"platform\",\r\n    \"platform::shell\",\r\n    \"proc\",\r\n    \"puts\",\r\n    \"pwd\",\r\n    \"read\",\r\n    \"refchan\",\r\n    \"regexp\",\r\n    \"registry\",\r\n    \"regsub|10\",\r\n    \"rename\",\r\n    \"return\",\r\n    \"safe\",\r\n    \"scan\",\r\n    \"seek\",\r\n    \"set\",\r\n    \"socket\",\r\n    \"source\",\r\n    \"split\",\r\n    \"string\",\r\n    \"subst\",\r\n    \"switch\",\r\n    \"tcl_endOfWord\",\r\n    \"tcl_findLibrary\",\r\n    \"tcl_startOfNextWord\",\r\n    \"tcl_startOfPreviousWord\",\r\n    \"tcl_wordBreakAfter\",\r\n    \"tcl_wordBreakBefore\",\r\n    \"tcltest\",\r\n    \"tclvars\",\r\n    \"tell\",\r\n    \"time\",\r\n    \"tm\",\r\n    \"trace\",\r\n    \"unknown\",\r\n    \"unload\",\r\n    \"unset\",\r\n    \"update\",\r\n    \"uplevel\",\r\n    \"upvar\",\r\n    \"variable\",\r\n    \"vwait\",\r\n    \"while\"\r\n  ];\r\n\r\n  return {\r\n    name: 'Tcl',\r\n    aliases: [ 'tk' ],\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      hljs.COMMENT(';[ \\\\t]*#', '$'),\r\n      hljs.COMMENT('^[ \\\\t]*#', '$'),\r\n      {\r\n        beginKeywords: 'proc',\r\n        end: '[\\\\{]',\r\n        excludeEnd: true,\r\n        contains: [\r\n          {\r\n            className: 'title',\r\n            begin: '[ \\\\t\\\\n\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\r\n            end: '[ \\\\t\\\\n\\\\r]',\r\n            endsWithParent: true,\r\n            excludeEnd: true\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: \"variable\",\r\n        variants: [\r\n          { begin: regex.concat(\r\n            /\\$/,\r\n            regex.optional(/::/),\r\n            TCL_IDENT,\r\n            '(::',\r\n            TCL_IDENT,\r\n            ')*'\r\n          ) },\r\n          {\r\n            begin: '\\\\$\\\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\r\n            end: '\\\\}',\r\n            contains: [ NUMBER ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'string',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ],\r\n        variants: [ hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }) ]\r\n      },\r\n      NUMBER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = tcl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}