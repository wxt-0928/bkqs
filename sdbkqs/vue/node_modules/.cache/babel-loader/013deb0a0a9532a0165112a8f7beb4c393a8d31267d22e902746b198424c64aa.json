{"ast":null,"code":"/*\r\nLanguage: Brainfuck\r\nAuthor: Evgeny Stepanischev <imbolk@gmail.com>\r\nWebsite: https://esolangs.org/wiki/Brainfuck\r\n*/\n\n/** @type LanguageFn */\nfunction brainfuck(hljs) {\n  const LITERAL = {\n    className: 'literal',\n    begin: /[+-]+/,\n    relevance: 0\n  };\n  return {\n    name: 'Brainfuck',\n    aliases: ['bf'],\n    contains: [hljs.COMMENT(/[^\\[\\]\\.,\\+\\-<> \\r\\n]/, /[\\[\\]\\.,\\+\\-<> \\r\\n]/, {\n      contains: [{\n        match: /[ ]+[^\\[\\]\\.,\\+\\-<> \\r\\n]/,\n        relevance: 0\n      }],\n      returnEnd: true,\n      relevance: 0\n    }), {\n      className: 'title',\n      begin: '[\\\\[\\\\]]',\n      relevance: 0\n    }, {\n      className: 'string',\n      begin: '[\\\\.,]',\n      relevance: 0\n    }, {\n      // this mode works as the only relevance counter\n      // it looks ahead to find the start of a run of literals\n      // so only the runs are counted as relevant\n      begin: /(?=\\+\\+|--)/,\n      contains: [LITERAL]\n    }, LITERAL]\n  };\n}\nmodule.exports = brainfuck;","map":{"version":3,"names":["brainfuck","hljs","LITERAL","className","begin","relevance","name","aliases","contains","COMMENT","match","returnEnd","module","exports"],"sources":["D:/软件工程/bkqs/sdbkqs/vue/node_modules/highlight.js/lib/languages/brainfuck.js"],"sourcesContent":["/*\r\nLanguage: Brainfuck\r\nAuthor: Evgeny Stepanischev <imbolk@gmail.com>\r\nWebsite: https://esolangs.org/wiki/Brainfuck\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction brainfuck(hljs) {\r\n  const LITERAL = {\r\n    className: 'literal',\r\n    begin: /[+-]+/,\r\n    relevance: 0\r\n  };\r\n  return {\r\n    name: 'Brainfuck',\r\n    aliases: [ 'bf' ],\r\n    contains: [\r\n      hljs.COMMENT(\r\n        /[^\\[\\]\\.,\\+\\-<> \\r\\n]/,\r\n        /[\\[\\]\\.,\\+\\-<> \\r\\n]/,\r\n        {\r\n          contains: [\r\n            {\r\n              match: /[ ]+[^\\[\\]\\.,\\+\\-<> \\r\\n]/,\r\n              relevance: 0\r\n            }\r\n          ],\r\n          returnEnd: true,\r\n          relevance: 0\r\n        }\r\n      ),\r\n      {\r\n        className: 'title',\r\n        begin: '[\\\\[\\\\]]',\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'string',\r\n        begin: '[\\\\.,]',\r\n        relevance: 0\r\n      },\r\n      {\r\n        // this mode works as the only relevance counter\r\n        // it looks ahead to find the start of a run of literals\r\n        // so only the runs are counted as relevant\r\n        begin: /(?=\\+\\+|--)/,\r\n        contains: [ LITERAL ]\r\n      },\r\n      LITERAL\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = brainfuck;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,SAASA,CAACC,IAAI,EAAE;EACvB,MAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,SAAS;IACpBC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACb,CAAC;EACD,OAAO;IACLC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,CAAE,IAAI,CAAE;IACjBC,QAAQ,EAAE,CACRP,IAAI,CAACQ,OAAO,CACV,uBAAuB,EACvB,sBAAsB,EACtB;MACED,QAAQ,EAAE,CACR;QACEE,KAAK,EAAE,2BAA2B;QAClCL,SAAS,EAAE;MACb,CAAC,CACF;MACDM,SAAS,EAAE,IAAI;MACfN,SAAS,EAAE;IACb,CACF,CAAC,EACD;MACEF,SAAS,EAAE,OAAO;MAClBC,KAAK,EAAE,UAAU;MACjBC,SAAS,EAAE;IACb,CAAC,EACD;MACEF,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,QAAQ;MACfC,SAAS,EAAE;IACb,CAAC,EACD;MACE;MACA;MACA;MACAD,KAAK,EAAE,aAAa;MACpBI,QAAQ,EAAE,CAAEN,OAAO;IACrB,CAAC,EACDA,OAAO;EAEX,CAAC;AACH;AAEAU,MAAM,CAACC,OAAO,GAAGb,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}